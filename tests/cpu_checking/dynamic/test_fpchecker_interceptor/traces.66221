rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
prlimit64(0, RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}, NULL) = 0
execve("/home/ignacio/fpchecker/FPChecker/build/install/bin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/home/ignacio/.local/bin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/home/ignacio/bin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/usr/local/sbin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/usr/local/bin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/usr/sbin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = -1 ENOENT (No such file or directory)
execve("/usr/bin/clang++", ["clang++", "-c", "main.cpp", "-O2"], 0x55c9eaf1fae0 /* 30 vars */) = 0
brk(NULL)                               = 0x138e000
arch_prctl(0x3001 /* ARCH_??? */, 0x7ffce0572c40) = -1 EINVAL (Invalid argument)
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=76031, ...}) = 0
mmap(NULL, 76031, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e0a4e4000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libpthread.so.0", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\220\201\0\0\0\0\0\0@\0\0\0\0\0\0\0h\\\2\0\0\0\0\0\0\0\0\0@\08\0\r\0@\0'\0&\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\330\2\0\0\0\0\0\0\330\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\20\222\1\0\0\0\0\0\20\222\1\0\0\0\0\0\20\222\1\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 k\0\0\0\0\0\0 k\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0p\0\0\0\0\0\0\0p\0\0\0\0\0\0\0p\0\0\0\0\0\0\345\4\1\0\0\0\0\0\345\4\1\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\200\1\0\0\0\0\0\0\200\1\0\0\0\0\0\0\200\1\0\0\0\0\0HG\0\0\0\0\0\0HG\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\10\314\1\0\0\0\0\0\10\334\1\0\0\0\0\0\10\334\1\0\0\0\0\0\10\7\0\0\0\0\0\0pH\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0p\315\1\0\0\0\0\0p\335\1\0\0\0\0\0p\335\1\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\30\3\0\0\0\0\0\0\30\3\0\0\0\0\0\0\30\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\08\3\0\0\0\0\0\08\3\0\0\0\0\0\08\3\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\30\3\0\0\0\0\0\0\30\3\0\0\0\0\0\0\30\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0000\222\1\0\0\0\0\0000\222\1\0\0\0\0\0000\222\1\0\0\0\0\0D\t\0\0\0\0\0\0D\t\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\10\314\1\0\0\0\0\0\10\334\1\0\0\0\0\0\10\334\1\0\0\0\0\0\370\3\0\0\0\0\0\0\370\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0", 832) = 832
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\345Ga\367\265T\320\374\301V)Yf]\223\337\373\353\332\360\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 824) = 68
fstat(3, {st_mode=S_IFREG|0755, st_size=157224, ...}) = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e0a4e2000
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\345Ga\367\265T\320\374\301V)Yf]\223\337\373\353\332\360\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 824) = 68
mmap(NULL, 140408, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e0a4bf000
mmap(0x7f7e0a4c6000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7f7e0a4c6000
mmap(0x7f7e0a4d7000, 20480, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0x7f7e0a4d7000
mmap(0x7f7e0a4dc000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1c000) = 0x7f7e0a4dc000
mmap(0x7f7e0a4de000, 13432, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e0a4de000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libclang-cpp.so.12", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\10\303\2\0\0\0\0\0\0\0\0@\08\0\t\0@\0\36\0\35\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\370\1\0\0\0\0\0\0\370\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\320A\236\2\0\0\0\0\320A\236\2\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\200C\236\2\0\0\0\0\200S\236\2\0\0\0\0\200S\236\2\0\0\0\0@\303$\0\0\0\0\0\240\350%\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\360[\302\2\0\0\0\0\360k\302\2\0\0\0\0\360k\302\2\0\0\0\0\200\2\0\0\0\0\0\0\200\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\244\247\230\2\0\0\0\0\244\247\230\2\0\0\0\0\244\247\230\2\0\0\0\0,\232\5\0\0\0\0\0,\232\5\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\200C\236\2\0\0\0\0\200S\236\2\0\0\0\0\200S\236\2\0\0\0\0\0\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0R\345td\6\0\0\0\200C\236\2\0\0\0\0\200S\236\2\0\0\0\0\200S\236\2\0\0\0\0\200L$\0\0\0\0\0\200L$\0\0\0\0\0\20\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\376\225\n\304\347T\240\274\2M9V\317\343\fr\226\36\330r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\272\335%\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\336%\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\v\336%\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0*\347\t\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0_\374\10\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\330\223\4\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$\35\16\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\36\4\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\350\t\0\22\0\0\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=46337984, ...}) = 0
mmap(NULL, 46414880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e0787b000
mmap(0x7f7e0a260000, 2412544, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x29e4000) = 0x7f7e0a260000
mmap(0x7f7e0a4ad000, 72736, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e0a4ad000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libLLVM-12.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\200\373s\5\0\0\0\0\0\0\0\0@\08\0\t\0@\0\36\0\35\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\370\1\0\0\0\0\0\0\370\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\220\0\"\5\0\0\0\0\220\0\"\5\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\360\v\"\5\0\0\0\0\360\33\"\5\0\0\0\0\360\33\"\5\0\0\0\0\20\356Q\0\0\0\0\0y6Y\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\3002s\5\0\0\0\0\300Bs\5\0\0\0\0\300Bs\5\0\0\0\0\320\2\0\0\0\0\0\0\320\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0DQ\30\5\0\0\0\0DQ\30\5\0\0\0\0DQ\30\5\0\0\0\0L\257\t\0\0\0\0\0L\257\t\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\360\v\"\5\0\0\0\0\360\33\"\5\0\0\0\0\360\33\"\5\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0R\345td\6\0\0\0\360\v\"\5\0\0\0\0\360\33\"\5\0\0\0\0\360\33\"\5\0\0\0\0\20\204Q\0\0\0\0\0\20\204Q\0\0\0\0\0\20\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\336\327\335\277\273\275k\17\232\367DZjz`?x\241.K\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\231h\t\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\341e,\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\313e,\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\253\5\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\326e,\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\09=\5\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3443\5\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\351\224\4\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\271\276\10\0\22\0\0\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=91489024, ...}) = 0
mmap(NULL, 91968105, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e020c5000
mmap(0x7f7e072e6000, 5373952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5220000) = 0x7f7e072e6000
mmap(0x7f7e07806000, 475753, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e07806000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libstdc++.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`\341\t\0\0\0\0\0@\0\0\0\0\0\0\0\0\324\35\0\0\0\0\0\0\0\0\0@\08\0\f\0@\0\"\0!\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\360Z\t\0\0\0\0\0\360Z\t\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0`\t\0\0\0\0\0\0`\t\0\0\0\0\0\0`\t\0\0\0\0\0a\4\17\0\0\0\0\0a\4\17\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0p\30\0\0\0\0\0\0p\30\0\0\0\0\0\0p\30\0\0\0\0\0\317\216\4\0\0\0\0\0\317\216\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0x\t\35\0\0\0\0\0x\31\35\0\0\0\0\0x\31\35\0\0\0\0\0\30\310\0\0\0\0\0\0\210\376\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0h\234\35\0\0\0\0\0h\254\35\0\0\0\0\0h\254\35\0\0\0\0\0 \2\0\0\0\0\0\0 \2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\340\2\0\0\0\0\0\0\340\2\0\0\0\0\0\0\340\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\3\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\3\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0x\t\35\0\0\0\0\0x\31\35\0\0\0\0\0x\31\35\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0S\345td\4\0\0\0\340\2\0\0\0\0\0\0\340\2\0\0\0\0\0\0\340\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\264\2\31\0\0\0\0\0\264\2\31\0\0\0\0\0\264\2\31\0\0\0\0\0<\223\0\0\0\0\0\0<\223\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0x\t\35\0\0\0\0\0x\31\35\0\0\0\0\0x\31\35\0\0\0\0\0\210\246\0\0\0\0\0\0\210\246\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\311\16f\3\307\315\370G\23\315DW\0\245u\323\352Dm\233\0\0\0\0\374\7\0\0\247\0\0\0\0\2\0\0\17\0\0\0\4\220G\20\203P\343\230", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=1956992, ...}) = 0
mmap(NULL, 1972224, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01ee3000
mprotect(0x7f7e01f79000, 1290240, PROT_NONE) = 0
mmap(0x7f7e01f79000, 987136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x96000) = 0x7f7e01f79000
mmap(0x7f7e0206a000, 299008, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x187000) = 0x7f7e0206a000
mmap(0x7f7e020b4000, 57344, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1d0000) = 0x7f7e020b4000
mmap(0x7f7e020c2000, 10240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e020c2000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\300\363\0\0\0\0\0\0@\0\0\0\0\0\0\0\310\334\24\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0!\0 \0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\344\0\0\0\0\0\0x\344\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\360\0\0\0\0\0\0\0\360\0\0\0\0\0\0\0\360\0\0\0\0\0\0%o\n\0\0\0\0\0%o\n\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0`\v\0\0\0\0\0\0`\v\0\0\0\0\0\0`\v\0\0\0\0\0\244i\t\0\0\0\0\0\244i\ttd\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\330\30\24\0\0\0\0\0\330\30\24\0\0\0\0\0\330\30\24\0\0\0\0\0d\34\0\0\0\0\0\0d\34\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\200\315\24\0\0\0\0\0\200\335\24\0\0\0\0\0\200\335\24\0\0\0\0\0\200\2\0\0\0\0\0\0\200\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0D\263\37430\365\177H\261\356\323J\232\216\230,m\36\367m\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\371\3\0\0`\4\0\0\0\0\0\0\313\2\0\0m\1\0\0\v\4\0\0\0\0\0\0\0\0\0\0+\3\0\0\365\1\0\0\0\0\0\0*\2\0\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=1369352, ...}) = 0
mmap(NULL, 1368336, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01d94000
mmap(0x7f7e01da3000, 684032, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0x7f7e01da3000
mmap(0x7f7e01e4a000, 618496, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xb6000) = 0x7f7e01e4a000
mmap(0x7f7e01ee1000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x14c000) = 0x7f7e01ee1000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libgcc_s.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\3405\0\0\0\0\0\0@\0\0\0\0\0\0\0\330\222\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0()\0\0\0\0\0\0()\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0U\20\1\0\0\0\0\0U\20\1\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0P\1\0\0\0\0\0\0P\1\0\0\0\0\0\0P\1\0\0\0\0\0l3\0\0\0\0\0\0l3\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\310\215\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\3\0\0\0\0\0\0\200\6\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\340\215\1\0\0\0\0\0\340\235\1\0\0\0\0\0\340\235\1\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\274\\\1\0\0\0\0\0\274\\\1\0\0\0\0\0\274\\\1\0\0\0\0\0\224\6\0\0\0\0\0\0\224\6\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\310\215\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\235\1\0\0\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0J\275\23<\310\16\1\2738\212\234B\331\343\3133\2106TJ\0\0\0\0\203\0\0\0\25\0\0\0\20\0\0\0\n\0\0\0\23\34\3\30\4$\0\1\1\201\0T\4\6\210\20\200\204\0\10\0\10\5\200\2\0@\20D\20\0\266\2\200\320 \301\0\220\202t\1\0\4\10(\300\2H\1\v \320\1\2(\0235\4`l\322\0!", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=104984, ...}) = 0
mmap(NULL, 107592, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01d79000
mmap(0x7f7e01d7c000, 73728, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f7e01d7c000
mmap(0x7f7e01d8e000, 16384, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15000) = 0x7f7e01d8e000
mmap(0x7f7e01d92000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0x7f7e01d92000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\360q\2\0\0\0\0\0@\0\0\0\0\0\0\0h\345\36\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0E\0D\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@I\2\0\0\0\0\0@I\2\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\264u\27\0\0\0\0\0\264u\27\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0e\235\4\0\0\0\0\0e\235\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20P\0\0\0\0\0\0\330\216\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\200\233\36\0\0\0\0\0\200\253\36\0\0\0\0\0\200\253\36\0\0\0\0\0\340\1\0\0\0\0\0\0\340\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0S\345td\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\304^\0\0\0\0\0\0\304^\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0*\0\0\0\0\0\0", 832) = 832
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@I\2\0\0\0\0\0@I\2\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\264u\27\0\0\0\0\0\264u\27\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0e\235\4\0\0\0\0\0e\235\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20P\0\0\0\0\0\0\330\216\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\200\233\36\0\0\0\0\0\200\253\36\0\0\0\0\0\200\253\36\0\0\0\0\0\340\1\0\0\0\0\0\0\340\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0S\345td\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\304^\0\0\0\0\0\0\304^\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0*\0\0\0\0\0\0\0*\0\0\0\0\0\0\1\0\0\0\0\0\0\0", 784, 64) = 784
pread64(3, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32, 848) = 32
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\t\233\222%\274\260\320\31\331\326\10\204\276X>\263\33\265\364N\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 880) = 68
fstat(3, {st_mode=S_IFREG|0755, st_size=2029224, ...}) = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01d77000
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\240\26\34\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@I\2\0\0\0\0\0@I\2\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\0P\2\0\0\0\0\0\264u\27\0\0\0\0\0\264u\27\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0\0\320\31\0\0\0\0\0e\235\4\0\0\0\0\0e\235\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20P\0\0\0\0\0\0\330\216\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\200\233\36\0\0\0\0\0\200\253\36\0\0\0\0\0\200\253\36\0\0\0\0\0\340\1\0\0\0\0\0\0\340\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\7\0\0\0\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\20\0\0\0\0\0\0\0\220\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0S\345td\4\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0P\3\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\274\26\34\0\0\0\0\0\304^\0\0\0\0\0\0\304^\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\0v\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0\206\36\0\0\0\0\0\0*\0\0\0\0\0\0\0*\0\0\0\0\0\0\1\0\0\0\0\0\0\0", 784, 64) = 784
pread64(3, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32, 848) = 32
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\t\233\222%\274\260\320\31\331\326\10\204\276X>\263\33\265\364N\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 880) = 68
mmap(NULL, 2036952, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b85000
mprotect(0x7f7e01baa000, 1847296, PROT_NONE) = 0
mmap(0x7f7e01baa000, 1540096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x25000) = 0x7f7e01baa000
mmap(0x7f7e01d22000, 303104, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19d000) = 0x7f7e01d22000
mmap(0x7f7e01d6d000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7f7e01d6d000
mmap(0x7f7e01d73000, 13528, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e01d73000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/tls/x86_64/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/tls/x86_64/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/tls/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/tls/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/tls/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/tls/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/tls/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/tls", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/x86_64/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/x86_64/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/x86_64/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib/x86_64", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/../lib/libffi.so.7", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu/../lib", 0x7ffce0571d90) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libffi.so.7", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0000\"\0\0\0\0\0\0@\0\0\0\0\0\0\0\230\242\0\0\0\0\0\0\0\0\0\0@\08\0\t\0@\0\34\0\33\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0000\27\0\0\0\0\0\0000\27\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0UZ\0\0\0\0\0\0UZ\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\200\0\0\0\0\0\0\0\200\0\0\0\0\0\0\0\200\0\0\0\0\0\0\354\17\0\0\0\0\0\0\354\17\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\320\234\0\0\0\0\0\0\320\254\0\0\0\0\0\0\320\254\0\0\0\0\0\0\214\4\0\0\0\0\0\0X\t\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\350\235\0\0\0\0\0\0\350\255\0\0\0\0\0\0\350\255\0\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0P\345td\4\0\0\0\300\203\0\0\0\0\0\0\300\203\0\0\0\0\0\0\300\203\0\0\0\0\0\0\4\2\0\0\0\0\0\0\4\2\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\320\234\0\0\0\0\0\0\320\254\0\0\0\0\0\0\320\254\0\0\0\0\0\0000\3\0\0\0\0\0\0000\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\241\200\357r\364\271h\331\177\361\376w'p\22\253\351R\330\254\0\0\0\0%\0\0\0$\0\0\0\4\0\0\0\10\0\0\0\21\1B\222\0\0l\n\240\0\302\"\206\6IV\243\24\"\220\200\24@\6d#%P\201Xb\316$\0\0\0'\0\0\0\0\0\0\0\0\0\0\0(\0\0\0*\0\0\0+\0\0\0-\0\0\0.\0\0\0000\0\0\0\0\0\0\0001\0\0\0004\0\0\0005\0\0\0006\0\0\0007\0\0\08\0\0\0;\0\0\0<\0\0\0=\0\0\0@\0\0\0A\0\0\0B\0\0\0\0\0\0\0\0\0\0\0C\0\0\0\0\0\0\0F\0\0\0H\0\0\0J\0\0\0K\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0L\0\0\0N\0\0\0\214\247P\324\3761u\344\367\25(\244\0012u\344\36\266\257#\311\305\3654\255\21\243<", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=43416, ...}) = 0
mmap(NULL, 46632, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b79000
mprotect(0x7f7e01b7b000, 32768, PROT_NONE) = 0
mmap(0x7f7e01b7b000, 24576, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f7e01b7b000
mmap(0x7f7e01b81000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8000) = 0x7f7e01b81000
mmap(0x7f7e01b83000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x9000) = 0x7f7e01b83000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libedit.so.2", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\260\217\0\0\0\0\0\0@\0\0\0\0\0\0\0\330%\3\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310u\0\0\0\0\0\0\310u\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\200\0\0\0\0\0\0\0\200\0\0\0\0\0\0\0\200\0\0\0\0\0\0001\257\1\0\0\0\0\0001\257\1\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\210\320\0\0\0\0\0\0\210\320\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\220\7\3\0\0\0\0\0\220\27\3\0\0\0\0\0\220\27\3\0\0\0\0\0\0\35\0\0\0\0\0\0\320X\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\260\34\3\0\0\0\0\0\260,\3\0\0\0\0\0\260,\3\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0D\246\2\0\0\0\0\0D\246\2\0\0\0\0\0D\246\2\0\0\0\0\0\314\r\0\0\0\0\0\0\314\r\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\220\7\3\0\0\0\0\0\220\27\3\0\0\0\0\0\220\27\3\0\0\0\0\0p\30\0\0\0\0\0\0p\30\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\331M\320\vq\3J\220*y\372ISA5\211\341\270\6\246\0\0\0\0\203\0\0\0\204\0\0\0\20\0\0\0\n\0\0\0\1\25\34\320\21&\4\204\210\t\30\201\211Ap(v\221\234\206\20\21  8\22\220e\30\\\"\24\24\20\4\23\200\r@8\\\254C1\3\t\332,\2 \16\0\210\4 \16\202\210JX\22\262P\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=208152, ...}) = 0
mmap(NULL, 225376, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b41000
mmap(0x7f7e01b49000, 110592, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8000) = 0x7f7e01b49000
mmap(0x7f7e01b64000, 57344, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x23000) = 0x7f7e01b64000
mmap(0x7f7e01b72000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x30000) = 0x7f7e01b72000
mmap(0x7f7e01b75000, 12384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e01b75000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/librt.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 7\0\0\0\0\0\0@\0\0\0\0\0\0\0\350\223\0\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\"\0!\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\360!\0\0\0\0\0\0\360!\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\305=\0\0\0\0\0\0\305=\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0p\0\0\0\0\0\0\0p\0\0\0\0\0\0\0p\0\0\0\0\0\0\257\17\0\0\0\0\0\0\257\17\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\230\215\0\0\0\0\0\0\230\235\0\0\0\0\0\0\230\235\0\0\0\0\0\0\340\4\0\0\0\0\0\0H\16\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\250\215\0\0\0\0\0\0\250\235\0\0\0\0\0\0\250\235\0\0\0\0\0\0000\2\0\0\0\0\0\0000\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0Xs\0\0\0\0\0\0Xs\0\0\0\0\0\0Xs\0\0\0\0\0\0,\2\0\0\0\0\0\0,\2\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\230\215\0\0\0\0\0\0\230\235\0\0\0\0\0\0\230\235\0\0\0\0\0\0h\2\0\0\0\0\0\0h\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0l\332\7?\350\305\2559\231\233\270d\3\5el\252g\314\214\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\311\0\0\0l\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0:\0\0\0\0\0\0\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=40040, ...}) = 0
mmap(NULL, 44000, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b36000
mprotect(0x7f7e01b39000, 24576, PROT_NONE) = 0
mmap(0x7f7e01b39000, 16384, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f7e01b39000
mmap(0x7f7e01b3d000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7f7e01b3d000
mmap(0x7f7e01b3f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8000) = 0x7f7e01b3f000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \22\0\0\0\0\0\0@\0\0\0\0\0\0\0\300A\0\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\37\0\36\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\20\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\20\0\0\0\0\0\0\211\21\0\0\0\0\0\0\211\21\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\10\5\0\0\0\0\0\0\10\5\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0p=\0\0\0\0\0\0pM\0\0\0\0\0\0pM\0\0\0\0\0\0\30\3\0\0\0\0\0\0\240\3\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\220=\0\0\0\0\0\0\220M\0\0\0\0\0\0\220M\0\0\0\0\0\0\20\2\0\0\0\0\0\0\20\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0D\0\0\0\0\0\0\0D\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\2440\0\0\0\0\0\0\2440\0\0\0\0\0\0\2440\0\0\0\0\0\0\334\0\0\0\0\0\0\0\334\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0p=\0\0\0\0\0\0pM\0\0\0\0\0\0pM\0\0\0\0\0\0\220\2\0\0\0\0\0\0\220\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\243\367\200(\"\34\363\267\204\335^\20\320Z\327\245Zj\205\325\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0A\0\0\0+\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0\0\35\0\0\0&\0\0\0\22\0\0\0!\0\0\0", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=18816, ...}) = 0
mmap(NULL, 20752, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b30000
mmap(0x7f7e01b31000, 8192, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1000) = 0x7f7e01b31000
mmap(0x7f7e01b33000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f7e01b33000
mmap(0x7f7e01b34000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f7e01b34000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\200\"\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\09\16\1\0\0\0\0\09\16\1\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0000\1\0\0\0\0\0\0000\1\0\0\0\0\0\0000\1\0\0\0\0\0\340_\0\0\0\0\0\0\340_\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\220\234\1\0\0\0\0\0\220\254\1\0\0\0\0\0\220\254\1\0\0\0\0\0 \4\0\0\0\0\0\0(\4\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\360\235\1\0\0\0\0\0\360\255\1\0\0\0\0\0\360\255\1\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\20s\1\0\0\0\0\0\20s\1\0\0\0\0\0\20s\1\0\0\0\0\0\4\4\0\0\0\0\0\0\4\4\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\220\234\1\0\0\0\0\0\220\254\1\0\0\0\0\0\220\254\1\0\0\0\0\0p\3\0\0\0\0\0\0p\3\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0z\4\307\223\242\316{\204\177C\204\f\246P\340\331\33558\235\0\0\0\0a\0\0\0\26\0\0\0\20\0\0\0\n\0\0\0\0\"@b\f\3\2\0E\0\0A\10\4\5\22\4\1\4\4\0\6\10\0\4\1\26\n\0\21\2\0\0A\0\224\204\204\10\10\0l\0\24 \260\204\200\0\2603@\t\360d\200\2B\206\0\0\0\4\20", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=108936, ...}) = 0
mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01b14000
mprotect(0x7f7e01b16000, 98304, PROT_NONE) = 0
mmap(0x7f7e01b16000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f7e01b16000
mmap(0x7f7e01b27000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f7e01b27000
mmap(0x7f7e01b2e000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f7e01b2e000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libtinfo.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\240\346\0\0\0\0\0\0@\0\0\0\0\0\0\0\240\346\2\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\324\0\0\0\0\0\0\0\324\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0\340\0\0\0\0\0\0\0\340\0\0\0\0\0\0\0\340\0\0\0\0\0\0\211\341\0\0\0\0\0\0\211\341\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\320\1\0\0\0\0\0\0\320\1\0\0\0\0\0\0\320\1\0\0\0\0\0\0\327\0\0\0\0\0\0\0\327\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\260\253\2\0\0\0\0\0\260\273\2\0\0\0\0\0\260\273\2\0\0\0\0\0D9\0\0\0\0\0\0\320=\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0H\333\2\0\0\0\0\0H\353\2\0\0\0\0\0H\353\2\0\0\0\0\0\20\2\0\0\0\0\0\0\20\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\350x\2\0\0\0\0\0\350x\2\0\0\0\0\0\350x\2\0\0\0\0\0\324\7\0\0\0\0\0\0\324\7\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\260\253\2\0\0\0\0\0\260\273\2\0\0\0\0\0\260\273\2\0\0\0\0\0P4\0\0\0\0\0\0P4\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\274\277\323A\220h\315\341\363\267}\245`,\10P\315y\377\254\0\0\0\0\305\0\0\0:\0\0\0 \0\0\0\v\0\0\0`\20@ P\304@\200\340EB\2042 H\34\0\0\2\0\0\222!\10\215#\4\30B\0\205\202<\222`\304\22\4\10\0\2\200@\10\0\0  ` ( \10\t\22\201\09F\0\20\2\0\20", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=192032, ...}) = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01b12000
mmap(NULL, 194944, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01ae2000
mmap(0x7f7e01af0000, 61440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xe000) = 0x7f7e01af0000
mmap(0x7f7e01aff000, 57344, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1d000) = 0x7f7e01aff000
mmap(0x7f7e01b0d000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2a000) = 0x7f7e01b0d000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libbsd.so.0", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0@N\0\0\0\0\0\0@\0\0\0\0\0\0\0Xr\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\0\0\0\0\2006\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0y\356\0\0\0\0\0\0y\356\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0000\1\0\0\0\0\0\0000\1\0\0\0\0\0\0000\1\0\0\0\0\0\310-\0\0\0\0\0\0\310-\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\360i\1\0\0\0\0\0\360y\1\0\0\0\0\0\360y\1\0\0\0\0\0\374\6\0\0\0\0\0\0\200\27\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\0j\1\0\0\0\0\0\0z\1\0\0\0\0\0\0z\1\0\0\0\0\0\20\2\0\0\0\0\0\0\20\2\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\214>\1\0\0\0\0\0\214>\1\0\0\0\0\0\214>\1\0\0\0\0\0\\\4\0\0\0\0\0\0\\\4\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\360i\1\0\0\0\0\0\360y\1\0\0\0\0\0\360y\1\0\0\0\0\0\20\6\0\0\0\0\0\0\20\6\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\304\340\00242\225(\35\376xQ\5ts-m\277u\270\362\0\0\0\0a\0\0\0}\0\0\0\20\0\0\0\n\0\0\0\0 \0`\20P\0\4\204T!\2\25\n\4\20\10\0\4\0\4\0\"\0043\20\300\0\" \0\0\0\1\0\2`\201\0\0\210A\220 \24<\0\322\f\2\200\t@(\0\2\0\0\2\2\200\t\20\1", 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=96728, ...}) = 0
mmap(NULL, 102768, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f7e01ac8000
mprotect(0x7f7e01acc000, 77824, PROT_NONE) = 0
mmap(0x7f7e01acc000, 61440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0x7f7e01acc000
mmap(0x7f7e01adb000, 12288, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f7e01adb000
mmap(0x7f7e01adf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x16000) = 0x7f7e01adf000
mmap(0x7f7e01ae1000, 368, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f7e01ae1000
close(3)                                = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01ac6000
mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01ac3000
arch_prctl(ARCH_SET_FS, 0x7f7e01ac3780) = 0
mprotect(0x7f7e01d6d000, 12288, PROT_READ) = 0
mprotect(0x7f7e01adf000, 4096, PROT_READ) = 0
mprotect(0x7f7e01b0d000, 16384, PROT_READ) = 0
mprotect(0x7f7e01b2e000, 4096, PROT_READ) = 0
mprotect(0x7f7e01b34000, 4096, PROT_READ) = 0
mprotect(0x7f7e0a4dc000, 4096, PROT_READ) = 0
mprotect(0x7f7e01b3f000, 4096, PROT_READ) = 0
mprotect(0x7f7e01b72000, 8192, PROT_READ) = 0
mprotect(0x7f7e01b83000, 4096, PROT_READ) = 0
mprotect(0x7f7e01d92000, 4096, PROT_READ) = 0
mprotect(0x7f7e01ee1000, 4096, PROT_READ) = 0
mprotect(0x7f7e020b4000, 45056, PROT_READ) = 0
mprotect(0x7f7e072e6000, 5345280, PROT_READ) = 0
mprotect(0x7f7e0a260000, 2379776, PROT_READ) = 0
mprotect(0x41e000, 4096, PROT_READ)     = 0
mprotect(0x7f7e0a524000, 4096, PROT_READ) = 0
munmap(0x7f7e0a4e4000, 76031)           = 0
set_tid_address(0x7f7e01ac3a50)         = 66221
set_robust_list(0x7f7e01ac3a60, 24)     = 0
rt_sigaction(SIGRTMIN, {sa_handler=0x7f7e0a4c6bf0, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f7e0a4d43c0}, NULL, 8) = 0
rt_sigaction(SIGRT_1, {sa_handler=0x7f7e0a4c6c90, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f7e0a4d43c0}, NULL, 8) = 0
rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
brk(NULL)                               = 0x138e000
brk(0x13af000)                          = 0x13af000
futex(0x7f7e07806a00, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x13d0000)                          = 0x13d0000
brk(0x13f1000)                          = 0x13f1000
futex(0x7f7e07843c0c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07808bf4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a750, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848874, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07843e8c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07844fe4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07844ff4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07842fac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078450ec, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07846214, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848784, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07847e3c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a0c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a0dc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a9c4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a8f4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07842fb4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784887c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078460bc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078492b4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784749c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078474a4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848f50, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848860, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07876cb0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0787799c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875974, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07878f68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07872e38, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07872f00, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078779ac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0787597c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07879198, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0787919c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875260, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07878d7c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a820, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07874a70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07872e30, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875b04, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875270, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875268, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07878f6c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07874a78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07874e28, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875250, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07875258, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07872d68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078788a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
sigaltstack(NULL, {ss_sp=NULL, ss_flags=SS_DISABLE, ss_size=0}) = 0
brk(0x1418000)                          = 0x1418000
sigaltstack({ss_sp=0x13e7320, ss_flags=0, ss_size=67584}, {ss_sp=NULL, ss_flags=SS_DISABLE, ss_size=0}) = 0
rt_sigaction(SIGHUP, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGINT, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGTERM, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGUSR2, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGILL, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGTRAP, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGABRT, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGFPE, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGBUS, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGSEGV, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGQUIT, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGSYS, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGXCPU, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGXFSZ, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGPIPE, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
rt_sigaction(SIGUSR1, {sa_handler=0x7f7e02c9d5b0, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
fstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x2), ...}) = 0
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x2), ...}) = 0
fstat(2, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x2), ...}) = 0
futex(0x7f7e0781c358, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820b2c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07844938, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078446b0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07819214, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820cdc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820dcc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820e94, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078131f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781371c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814050, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07812578, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078210f4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820b34, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07820d04, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e3c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784df48, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e058, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e060, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e070, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e6e0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815f80, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e350, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e6e8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e358, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e360, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784eed0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07850ca0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784d5a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784d778, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784d948, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784d950, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784efc8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e6f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784f6d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e3b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e3b4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784e068, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07850c98, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784f098, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784efd0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a45c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848764, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784a460, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784f3a4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0784f6c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855558, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855560, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078555bc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855570, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078555b4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851524, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855544, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07847594, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852048, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07856638, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814d0c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855de8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb6c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855eb0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855698, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078556a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078556b0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855f90, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07856524, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818c68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811d84, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855f88, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855d18, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851b50, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851510, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851518, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848094, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785151c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851784, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078525d4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078525dc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078525d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078525f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078527c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852990, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852bd8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852bdc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851b48, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852248, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852be4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07852be8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078534f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785514c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078555cc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855780, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855920, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07856640, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785652c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855de0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785651c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855fa0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855848, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855f78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855f80, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811e54, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078556a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855778, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855f98, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855144, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851444, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07851448, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078524ac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078524a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07855550, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07856628, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07856630, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078555c4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078582a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078582ac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078580d8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078571f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816f5c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07858e68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078572c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07859a50, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07859578, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07859640, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07859570, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07858568, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07858570, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07859310, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078586c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785a7c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785a7d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785a8f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785ab48, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785aa78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785aa80, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785ac18, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785ac20, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785b2f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785b868, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785b8a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785bd98, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785d210, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785d418, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07822b58, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07847e44, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782240c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785eea8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785f498, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781364c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785f590, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078625e0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785fa88, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0785fda0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07861f18, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07861ff8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078621e8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07864778, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07864ce0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07865f78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07865034, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867150, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867088, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866988, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866978, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866980, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866ca0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866ca4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07866c98, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867158, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07868bd8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a4a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078685b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a4b0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a580, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a588, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a4b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867438, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867440, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07867430, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a698, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a880, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a4a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078692c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786a888, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786afd0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ae90, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ae80, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786be10, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c000, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c008, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bf14, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c0d8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786be18, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c200, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c0d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c208, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1b0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bf0c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bef8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bf00, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bee8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786be20, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bf04, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bf1c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786bef0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c1a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786cbf4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786f504, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ccd0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786dfec, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ccd8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780fd34, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ce78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ce68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c6e0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c988, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786cbfc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786cc04, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786f420, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ca68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ce60, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786c618, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ef78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786f298, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786ce70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786e458, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786e468, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786e560, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0786e568, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816e90, FUTEX_WAKE_PRIVATE, 2147483647) = 0
access("/proc/self/exe", F_OK)          = 0
readlink("/proc/self/exe", "/usr/lib/llvm-12/bin/clang", 4096) = 26
lstat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat("/usr/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat("/usr/lib/llvm-12", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat("/usr/lib/llvm-12/bin", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
lstat("/usr/lib/llvm-12/bin/clang", {st_mode=S_IFREG|0755, st_size=128672, ...}) = 0
mmap(NULL, 180224, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01a97000
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
stat("/home/ignacio/.terminfo", 0x14045b0) = -1 ENOENT (No such file or directory)
stat("/etc/terminfo", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/lib/terminfo", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/share/terminfo", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
access("/etc/terminfo/x/xterm-256color", R_OK) = -1 ENOENT (No such file or directory)
access("/lib/terminfo/x/xterm-256color", R_OK) = 0
openat(AT_FDCWD, "/lib/terminfo/x/xterm-256color", O_RDONLY) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=3503, ...}) = 0
read(3, "\36\2%\0&\0\17\0\235\1\356\5xterm-256color|xterm with 256 colors\0\0\1\0\0\1\0\0\0\1\0\0\0\0\1\1\0\0\0\0\0\0\0\1\0\0\1\0\1\1\0\0\0\0\0\0\0\0\1\0P\0\0\0\10\0\0\0\30\0\0\0\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\0\1\0\0\0\0\1\0\0\0\4\0\6\0\10\0\31\0\36\0&\0*\0.\0\377\3779\0J\0L\0P\0W\0\377\377Y\0f\0\377\377j\0n\0x\0|\0\377\377\377\377\200\0\204\0\211\0\216\0\377\377\240\0\245\0\252\0\377\377\257\0\264\0\271\0\276\0\307\0\313\0\322\0\377\377\344\0\351\0\357\0\365\0\377\377\377\377\377\377\7\1\377\377\377\377\377\377\31\1\377\377\35\1\377\377\377\377\377\377\37\1\377\377$\1\377\377\377\377\377\377\377\377(\1,\0012\0016\1:\1>\1D\1J\1P\1V\1\\\1`\1\377\377e\1\377\377i\1n\1s\1w\1~\1\377\377\205\1\211\1\221\1\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\231\1\242\1\377\377\377\377\253\1\264\1\275\1\306\1\317\1\330\1\341\1\352\1\363\1\374\1\377\377\377\377\377\377\5\2\tf\3\23\3\377\377\377\377\32\3\377\377!\3\377\377\377\377\377\377(\3\377\377\377\377\377\377\377\377\377\377/\0035\3;\3B\3I\3P\3W\3_\3g\3o\3w\3\177\3\207\3\217\3\227\3\236\3\245\3\254\3\263\3\273\3\303\3\313\3\323\3\333\3\343\3\353\3\363\3\372\3\1\4\10\4\17\4\27\4\37\4'\4/\0047\4?\4G\4O\4V\4]\4d\4k\4s\4{\4\203\4\213\4\223\4\233\4\243\4\253\4\262\4\271\4\300\4\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\305\4\320\4\325\4\350\4\354\4\365\4\374\4\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377Z\5\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377_\5\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377e\5\377\377\377\377\377\377i\5\250\5\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\350\5\353\5\33[Z\0\7\0\r\0\33[%i%p1%d;%p2%dr\0\33[3g\0\33[H\33[2J\0\33[K\0\33[J\0\33[%i%p1%dG\0\33[%i%p1%d;%p2%dH\0\n\0\33[H\0\33[?25l\0\10\0\33[?12l\33[?25h\0\33[C\0\33[A\0\33[?12;25h\0\33[P\0\33[M\0\33(0\0\33[5m\0\33[1m\0\33[?1049h\33[22;0;0t\0\33[2m\0\33[4h\0\33[8m\0\33[7m\0\33[7m\0\33[4m\0\33[%p1%dX\0\33(B\0\33(B\33[m\0\33[?1049l\33[23;0;0t\0\33[4l\0\33[27m\0\33[24m\0\33[?5h$<100/>\33[?5l\0\33[!p\33[?3;4l\33[4l\33>\0\33[L\0\177\0\33[3~\0\33OB\0\33OP\0\33[21~\0\33OQ\0\33OR\0\33OS\0\33[15~\0\33[17~\0\33[18~\0\33[19~\0\33[20~\0\33OH\0\33[2~\0\33OD\0\33[6~\0\33[5~\0\33OC\0\33[1;2B\0\33[1;2A\0\33OA\0\33[?1l\33>\0\33[?1h\33=\0\33[?1034l\0\33[?1034h\0\33[%p1%dP\0\33[%p1%dM\0\33[%p1%dB\0\33[%p1%d@\0\33[%p1%dS\0\33[%p1%dL\0\33[%p1%dD\0\33[%p1%dC\0\33[%p1%dT\0\33[%p1%dA\0\33[i\0\33[4i\0\33[5i\0\33c\33]104\7\0\33[!p\33[?3;4l\33[4l\33>\0\338\0\33[%i%p1%dd\0\0337\0\n\0\33M\0%?%p9%t\33(0%e\33(B%;\33[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m\0\33H\0\t\0\33OE\0``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~\0\33[Z\0\33[?7h\0\33[?7l\0\33OF\0\33OM\0\33[3;2~\0\33[1;2F\0\33[1;2H\0\33[2;2~\0\33[1;2D\0\33[6;2~\0\33[5;2~\0\33[1;2C\0\33[23~\0\33[24~\0\33[1;2P\0\33[1;2Q\0\33[1;2R\0\33[1;2S\0\33[15;2~\0\33[17;2~\0\33[18;2~\0\33[19;2~\0\33[20;2~\0\33[21;2~\0\33[23;2~\0\33[24;2~\0\33[1;5P\0\33[1;5Q\0\33[1;5R\0\33[1;5S\0\33[15;5~\0\33[17;5~\0\33[18;5~\0\33[19;5~\0\33[20;5~\0\33[21;5~\0\33[23;5~\0\33[24;5~\0\33[1;6P\0\33[1;6Q\0\33[1;6R\0\33[1;6S\0\33[15;6~\0\33[17;6~\0\33[18;6~\0\33[19;6~\0\33[20;6~\0\33[21;6~\0\33[23;6~\0\33[24;6~\0\33[1;3P\0\33[1;3Q\0\33[1;3R\0\33[1;3S\0\33[15;3~\0\33[17;3~\0\33[18;3~\0\33[19;3~\0\33[20;3~\0\33[21;3~\0\33[23;3~\0\33[24;3~\0\33[1;4P\0\33[1;4Q\0\33[1;4R\0\33[1K\0\33[%i%d;%dR\0\33[6n\0\33[?%[;0123456789]c\0\33[c\0\33[39;49m\0\33]104\7\0\33]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\33\\\0\33[3m\0\33[23m\0\33[M\0\33[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m\0\33[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m\0\33l\0\33m\0\2\0\0\0<\0z\0\363\2\1\1\0\0\7\0\23\0\30\0*\0000\0:\0A\0H\0O\0V\0]\0d\0k\0r\0y\0\200\0\207\0\216\0\225\0\234\0\243\0\252\0\261\0\270\0\277\0\306\0\315\0\324\0\333\0\342\0\351\0\360\0\367\0\376\0\5\1\f\1\23\1\32\1!\1(\1/\0016\1=\1D\1K\1R\1Y\1`\1g\1n\1u\1|\1\203\1\212\1\221\1\230\1\237\1\246\1\254\1\0\0\3\0\6\0\t\0\f\0\17\0\22\0\25\0\30\0\35\0\"\0'\0,\0001\0005\0:\0?\0D\0I\0N\0T\0Z\0`\0f\0l\0r\0x\0~\0\204\0\212\0\217\0\224\0\231\0\236\0\243\0\251\0\257\0\265\0\273\0\301\0\307\0\315\0\323\0\331\0\337\0\345\0\353\0\361\0\367\0\375\0\3\1\t\1\17\1\25\1\33\1\37\1$\1)\1.\0013\18\1=\1\33]112\7\0\33]12;%p1%s\7\0\33[3J\0\33]52;%p1%s;%p2%s\7\0\33[2 q\0\33[%p1%d q\0\33[3;3~\0\33[3;4~\0\33[3;5~\0\33[3;6~\0\33[3;7~\0\33[1;2B\0\33[1;3B\0\33[1;4B\0\33[1;5B\0\33[1;6B\0\33[1;7B\0\33[1;3F\0\33[1;4F\0\33[1;5F\0\33[1;6F\0\33[1;7F\0\33[1;3H\0\33[1;4H\0\33[1;5H\0\33[1;6H\0\33[1;7H\0\33[2;3~\0\33[2;4~\0\33[2;5~\0\33[2;6~\0\33[2;7~\0\33[1;3D\0\33[1;4D\0\33[1;5D\0\33[1;6D\0\33[1;7D\0\33[6;3~\0\33[6;4~\0\33[6;5~\0\33[6;6~\0\33[6;7~\0\33[5;3~\0\33[5;4~\0\33[5;5~\0\33[5;6~\0\33[5;7~\0\33[1;3C\0\33[1;4C\0\33[1;5C\0\33[1;6C\0\33[1;7C\0\33[1;2A\0\33[1;3A\0\33[1;4A\0\33[1;5A\0\33[1;6A\0\33[1;7A\0\33[29m\0\33[9m\0AX\0XT\0Cr\0Cs\0E3\0Ms\0Se\0Ss\0kDC3\0kDC4\0kDC5\0kDC6\0kDC7\0kDN\0kDN3\0kDN4\0kDN5\0kDN6\0kDN7\0kEND3\0kEND4\0kEND5\0kEND6\0kEND7\0kHOM3\0kHOM4\0kHOM5\0kHOM6\0kHOM7\0kIC3\0kIC4\0kIC5\0kIC6\0kIC7\0kLFT3\0kLFT4\0kLFT5\0kLFT6\0kLFT7\0kNXT3\0kNXT4\0kNXT5\0kNXT6\0kNXT7\0kPRV3\0kPRV4\0kPRV5\0kPRV6\0kPRV7\0kRIT3\0kRIT4\0kRIT5\0kRIT6\0kRIT7\0kUP\0kUP3\0kUP4\0kUP5\0kUP6\0kUP7\0rmxx\0smxx\0", 32768) = 3503
read(3, "", 28672)                      = 0
close(3)                                = 0
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
ioctl(2, TIOCGWINSZ, {ws_row=107, ws_col=320, ws_xpixel=2240, ws_ypixel=1498}) = 0
lseek(2, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)
access("/home/ignacio/fpchecker/FPChecker/build/install/bin/clang++", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/home/ignacio/.local/bin/clang++", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/home/ignacio/bin/clang++", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/local/sbin/clang++", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/local/bin/clang++", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/sbin/clang++", R_OK|X_OK)  = -1 ENOENT (No such file or directory)
access("/usr/bin/clang++", R_OK|X_OK)   = 0
stat("/usr/bin/clang++", {st_mode=S_IFREG|0755, st_size=128672, ...}) = 0
access("/usr/bin", F_OK)                = 0
rt_sigaction(SIGABRT, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
rt_sigaction(SIGBUS, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
rt_sigaction(SIGFPE, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
rt_sigaction(SIGILL, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
rt_sigaction(SIGSEGV, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
rt_sigaction(SIGTRAP, {sa_handler=0x7f7e02bed2a0, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f7e0a4d43c0}, {sa_handler=0x7f7e02c9e390, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_NODEFER|SA_RESETHAND, sa_restorer=0x7f7e0a4d43c0}, 8) = 0
stat("/usr/lib/llvm-12/bin/../lib/x86_64-pc-linux-gnu/c++", 0x7ffce0570c08) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/bin/../lib/x86_64-pc-linux-gnu/c++", 0x7ffce0570c08) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/lib/x86_64-pc-linux-gnu", 0x7ffce0570c08) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/lib/x86_64-pc-linux-gnu", 0x7ffce0570c08) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/lib/linux/x86_64", 0x7ffce0570d58) = -1 ENOENT (No such file or directory)
access("/home/ignacio/fpchecker/FPChecker/build/install/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/home/ignacio/.local/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/home/ignacio/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/local/sbin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/local/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/usr/sbin/ptxas", R_OK|X_OK)    = -1 ENOENT (No such file or directory)
access("/usr/bin/ptxas", R_OK|X_OK)     = -1 ENOENT (No such file or directory)
access("/sbin/ptxas", R_OK|X_OK)        = -1 ENOENT (No such file or directory)
access("/bin/ptxas", R_OK|X_OK)         = -1 ENOENT (No such file or directory)
access("/usr/games/ptxas", R_OK|X_OK)   = -1 ENOENT (No such file or directory)
access("/usr/local/games/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/snap/bin/ptxas", R_OK|X_OK)    = -1 ENOENT (No such file or directory)
access("/home/ignacio/satire/gelpia/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
access("/home/ignacio/bin/ptxas", R_OK|X_OK) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/os-release", O_RDONLY|O_CLOEXEC) = 3
access("/proc/self/fd", R_OK)           = 0
readlink("/proc/self/fd/3", "/usr/lib/os-release", 4096) = 19
fstat(3, {st_mode=S_IFREG|0644, st_size=382, ...}) = 0
pread64(3, "NAME=\"Ubuntu\"\nVERSION=\"20.04.2 LTS (Focal Fossa)\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 20.04.2 LTS\"\nVERSION_ID=\"20.04\"\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nVERSION_CODENAME=focal\nUBUNTU_CODENAME=focal\n", 382, 0) = 382
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/etc/lsb-release", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/etc/lsb-release", 4096) = 16
fstat(3, {st_mode=S_IFREG|0644, st_size=104, ...}) = 0
pread64(3, "DISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=20.04\nDISTRIB_CODENAME=focal\nDISTRIB_DESCRIPTION=\"Ubuntu 20.04.2 LTS\"\n", 104, 0) = 104
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat("/usr/local/cuda", 0x7ffce0570a68) = -1 ENOENT (No such file or directory)
stat("/usr/local/cuda-8.0", 0x7ffce0570a68) = -1 ENOENT (No such file or directory)
stat("/usr/local/cuda-7.5", 0x7ffce0570a68) = -1 ENOENT (No such file or directory)
stat("/usr/local/cuda-7.0", 0x7ffce0570a68) = -1 ENOENT (No such file or directory)
stat("/usr/lib/cuda", 0x7ffce0570a68)   = -1 ENOENT (No such file or directory)
stat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/bin/.hipVersion", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/bin/.hipVersion", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/opt/rocm", 0x7ffce0570b48)       = -1 ENOENT (No such file or directory)
stat("/etc/env.d/gcc", 0x7ffce05707e8)  = -1 ENOENT (No such file or directory)
stat("/usr/bin/..", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib64/gcc", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib64/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-unknown-linux-gnu/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-redhat-linux6E/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-redhat-linux/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-suse-linux/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-manbo-linux-gnu/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-slackware-linux/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-unknown-linux/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-amazon-linux/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-linux-android/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
getdents64(3, /* 4 entries */, 32768)   = 96
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/64/crtbegin.o", 0x7ffce056fbb8) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/crtbegin.o", {st_mode=S_IFREG|0644, st_size=2592, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/64/crtbegin.o", 0x7ffce056fb28) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/32/crtbegin.o", 0x7ffce056fb28) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/x32/crtbegin.o", 0x7ffce056fb28) = -1 ENOENT (No such file or directory)
getdents64(3, /* 0 entries */, 32768)   = 0
close(3)                                = 0
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-unknown-linux-gnu/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-redhat-linux6E/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-redhat-linux/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-suse-linux/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-manbo-linux-gnu/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
brk(0x143a000)                          = 0x143a000
getdents64(3, /* 4 entries */, 32768)   = 96
getdents64(3, /* 0 entries */, 32768)   = 0
brk(0x1432000)                          = 0x1432000
close(3)                                = 0
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-slackware-linux/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-unknown-linux/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-amazon-linux/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-linux-android/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib32", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib32/gcc", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib32/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-linux-gnu/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-pc-linux-gnu/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i486-linux-gnu/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i386-linux-gnu/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i386-redhat-linux6E/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-redhat-linux/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i586-redhat-linux/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i386-redhat-linux/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i586-suse-linux/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i486-slackware-linux/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-montavista-linux/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i586-linux-gnu/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-linux-android/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i386-gnu/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i486-gnu/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i586-gnu/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i686-gnu/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib32/i386-pc-linux-gnu/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-linux-gnu/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-pc-linux-gnu/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i486-linux-gnu/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i386-linux-gnu/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i386-redhat-linux6E/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-redhat-linux/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i586-redhat-linux/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i386-redhat-linux/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i586-suse-linux/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i486-slackware-linux/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-montavista-linux/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i586-linux-gnu/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-linux-android/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i386-gnu/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i486-gnu/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i586-gnu/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i686-gnu/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/i386-pc-linux-gnu/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-10/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-9/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-8/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-7/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-6/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-4/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-3/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/opt/rh/devtoolset-2/root/usr", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
stat("/usr", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib64/gcc", 0x7ffce0570878)  = -1 ENOENT (No such file or directory)
stat("/usr/lib64/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-unknown-linux-gnu/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-redhat-linux6E/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-redhat-linux/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-suse-linux/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-manbo-linux-gnu/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-slackware-linux/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-unknown-linux/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-amazon-linux/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-linux-android/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib64/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/gcc", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
getdents64(3, /* 4 entries */, 32768)   = 96
getdents64(3, /* 0 entries */, 32768)   = 0
close(3)                                = 0
openat(AT_FDCWD, "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-unknown-linux-gnu/gcc/x86_64-unknown-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-redhat-linux6E/gcc/x86_64-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-redhat-linux/gcc/x86_64-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-suse-linux/gcc/x86_64-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-manbo-linux-gnu/gcc/x86_64-manbo-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
fstat(3, {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
getdents64(3, /* 4 entries */, 32768)   = 96
getdents64(3, /* 0 entries */, 32768)   = 0
close(3)                                = 0
openat(AT_FDCWD, "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-slackware-linux/gcc/x86_64-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-unknown-linux/gcc/x86_64-unknown-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-amazon-linux/gcc/x86_64-amazon-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-linux-android/gcc/x86_64-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/x86_64-pc-linux-gnu/gcc/x86_64-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/lib32", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib32/gcc", 0x7ffce0570878)  = -1 ENOENT (No such file or directory)
stat("/usr/lib32/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-linux-gnu/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-pc-linux-gnu/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i486-linux-gnu/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i386-linux-gnu/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i386-redhat-linux6E/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-redhat-linux/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i586-redhat-linux/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i386-redhat-linux/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i586-suse-linux/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i486-slackware-linux/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-montavista-linux/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i586-linux-gnu/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-linux-android/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i386-gnu/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i486-gnu/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i586-gnu/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i686-gnu/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib32/i386-pc-linux-gnu/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/usr/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/gcc", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/gcc-cross", 0x7ffce0570878) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-linux-gnu/gcc/i686-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-pc-linux-gnu/gcc/i686-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i486-linux-gnu/gcc/i486-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i386-linux-gnu/gcc/i386-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i386-redhat-linux6E/gcc/i386-redhat-linux6E", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-redhat-linux/gcc/i686-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i586-redhat-linux/gcc/i586-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i386-redhat-linux/gcc/i386-redhat-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i586-suse-linux/gcc/i586-suse-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i486-slackware-linux/gcc/i486-slackware-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-montavista-linux/gcc/i686-montavista-linux", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i586-linux-gnu/gcc/i586-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-linux-android/gcc/i686-linux-android", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i386-gnu/gcc/i386-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i486-gnu/gcc/i486-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i586-gnu/gcc/i586-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i686-gnu/gcc/i686-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/i386-pc-linux-gnu/gcc/i386-pc-linux-gnu", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/lib/../lib64", 0x7ffce0570ce8) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/llvm-12/bin/../lib/x86_64-linux-gnu", 0x7ffce0570e28) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/bin/../lib64", 0x7ffce0570e28) = -1 ENOENT (No such file or directory)
stat("/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/lib/../lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/usr/lib/../lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/x86_64-linux-gnu/../../lib64", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/lib", 0x7ffce0570c88) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../..", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/llvm-12/bin/../lib", {st_mode=S_IFDIR|0755, st_size=16384, ...}) = 0
stat("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("main.cpp", {st_mode=S_IFREG|0664, st_size=358, ...}) = 0
stat("/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/x86_64-linux-gnu", 0x7ffce056fa78) = -1 ENOENT (No such file or directory)
access("/usr/lib/llvm-12/lib/clang/12.0.0/include", F_OK) = 0
stat("/lib/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=73728, ...}) = 0
stat("/usr/include/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/home/ignacio/fpchecker/FPChecker/tests/cpu_checking/dynamic/test_fpchecker_interceptor", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
stat(".", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
ioctl(2, TCGETS, {B9600 opost isig icanon echo ...}) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
mmap(NULL, 200704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01a66000
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/local/include", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/lib/llvm-12/lib/clang/12.0.0/include", {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0
stat("/usr/include/x86_64-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/include", 0x7ffce056f578)        = -1 ENOENT (No such file or directory)
stat("/", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/include", 0x7ffce056f4b8)        = -1 ENOENT (No such file or directory)
stat("/usr/include", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat(".", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0
openat(AT_FDCWD, "main.cpp", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/home/ignacio/fpchecker/FPChecker/tests/cpu_checking/dynamic/test_fpchecker_interceptor/main.cpp", 4096) = 96
fstat(3, {st_mode=S_IFREG|0664, st_size=358, ...}) = 0
brk(0x1453000)                          = 0x1453000
stat("main.o", {st_mode=S_IFREG|0664, st_size=1904, ...}) = 0
access("main.o", W_OK)                  = 0
openat(AT_FDCWD, "/dev/urandom", O_RDONLY) = 4
read(4, "\36\35A\263", 4)               = 4
close(4)                                = 0
openat(AT_FDCWD, "main-171a64ae.o.tmp", O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC, 0666) = 4
lseek(4, 0, SEEK_CUR)                   = 0
brk(0x1474000)                          = 0x1474000
pread64(3, "\n#include <stdio.h>\n#include <stdlib.h>\n#include \"compute.h\"\n\nint main(int argc, char **argv)\n{\n  int n = 8;\n  int nbytes = n*sizeof(double); \n  double *data = (double *)malloc(nbytes);\n  for (int i=0; i < n; ++i)\n    data[i] = (double)(i+1);\n  printf(\"Calling kernel\\n\");\n  double result = compute(data, n);\n  printf(\"Result: %f\\n\", result);\n\n  return 0;\n}\n", 358, 0) = 358
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x1495000)                          = 0x1495000
brk(0x14b6000)                          = 0x14b6000
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/stdio.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/stdio.h", 4096) = 20
fstat(3, {st_mode=S_IFREG|0644, st_size=29950, ...}) = 0
mmap(NULL, 29950, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e0a4ef000
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits", {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/libc-header-start.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/libc-header-start.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/bits", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/local/include/bits", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/include/bits", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/include/x86_64-linux-gnu/bits", {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h", 4096) = 54
fstat(3, {st_mode=S_IFREG|0644, st_size=3288, ...}) = 0
pread64(3, "/* Handle feature test macros at the start of a header.\n   Copyright (C) 2016-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/* This header is internal to glibc and should not be included outside\n   of glibc headers.  Headers including it must define\n   __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION first.  This header\n   cannot have multiple include guards because ISO C feature test\n   macros depend on the definition of the macro when an affected\n   header is included, not when the first system header is\n   included.  */\n\n#ifndef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION\n# error \"Never include <bits/libc-header-start.h> directly.\"\n#endif\n\n#undef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION\n\n#include <features.h>\n\n/* ISO/IEC TR 24731-2:2010 defines the __STDC_WANT_LIB_EXT2__\n   macro.  */\n#undef __GLIBC_USE_LIB_EXT2\n#if (defined __USE_GNU\t\t\t\t\t\t\t\\\n     || (defined __STDC_WANT_LIB_EXT2__ && __STDC_WANT_LIB_EXT2__ > 0))\n# define __GLIBC_USE_LIB_EXT2 1\n#else\n# define __GLIBC_USE_LIB_EXT2 0\n#endif\n\n/* ISO/IEC TS 18661-1:2014 defines the __STDC_WANT_IEC_60559_BFP_EXT__\n   macro.  Most but not all symbols enabled by that macro in TS\n   18661-1 are enabled unconditionally in C2X; the symbols in Annex F\n   still require that macro in C2X.  */\n#undef __GLIBC_USE_IEC_60559_BFP_EXT\n#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__\n# define __GLIBC_USE_IEC_60559_BFP_EXT 1\n#else\n# define __GLIBC_USE_IEC_60559_BFP_EXT 0\n#endif\n#undef __GLIBC_USE_IEC_60559_BFP_EXT_C2X\n#if __GLIBC_USE (IEC_60559_BFP_EXT) || __GLIBC_USE (ISOC2X)\n# define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 1\n#else\n# define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0\n#endif\n\n/* ISO/IEC TS 18661-4:2015 defines the\n   __STDC_WANT_IEC_60559_FUNCS_EXT__ macro.  Other than the reduction\n   functions, the symbols from this TS are enabled unconditionally in\n   C2X.  */\n#undef __GLIBC_USE_IEC_60559_FUNCS_EXT\n#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__\n# define __GLIBC_USE_IEC_60559_FUNCS_EXT 1\n#else\n# define __GLIBC_USE_IEC_60559_FUNCS_EXT 0\n#endif\n#undef __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X\n#if __GLIBC_USE (IEC_60559_FUNCS_EXT) || __GLIBC_USE (ISOC2X)\n# define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 1\n#else\n# define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0\n#endif\n\n/* ISO/IEC TS 18661-3:2015 defines the\n   __STDC_WANT_IEC_60559_TYPES_EXT__ macro.  */\n#undef __GLIBC_USE_IEC_60559_TYPES_EXT\n#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__\n# define __GLIBC_USE_IEC_60559_TYPES_EXT 1\n#else\n# define __GLIBC_USE_IEC_60559_TYPES_EXT 0\n#endif\n", 3288, 0) = 3288
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/features.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/features.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/features.h", 4096) = 23
fstat(3, {st_mode=S_IFREG|0644, st_size=17079, ...}) = 0
mmap(NULL, 17079, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e0a4ea000
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/stdc-predef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/stdc-predef.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/stdc-predef.h", 4096) = 26
fstat(3, {st_mode=S_IFREG|0644, st_size=2290, ...}) = 0
pread64(3, "/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef\t_STDC_PREDEF_H\n#define\t_STDC_PREDEF_H\t1\n\n/* This header is separate from features.h so that the compiler can\n   include it implicitly at the start of every compilation.  It must\n   not itself include <features.h> or any other header that includes\n   <features.h> because the implicit include comes before any feature\n   test macros that may be defined in a source file before it first\n   explicitly includes a system header.  GCC knows the name of this\n   header in order to preinclude it.  */\n\n/* glibc's intent is to support the IEC 559 math functionality, real\n   and complex.  If the GCC (4.9 and later) predefined macros\n   specifying compiler intent are available, use them to determine\n   whether the overall intent is to support these features; otherwise,\n   presume an older compiler has intent to support these features and\n   define these macros by default.  */\n\n#ifdef __GCC_IEC_559\n# if __GCC_IEC_559 > 0\n#  define __STDC_IEC_559__\t\t1\n# endif\n#else\n# define __STDC_IEC_559__\t\t1\n#endif\n\n#ifdef __GCC_IEC_559_COMPLEX\n# if __GCC_IEC_559_COMPLEX > 0\n#  define __STDC_IEC_559_COMPLEX__\t1\n# endif\n#else\n# define __STDC_IEC_559_COMPLEX__\t1\n#endif\n\n/* wchar_t uses Unicode 10.0.0.  Version 10.0 of the Unicode Standard is\n   synchronized with ISO/IEC 10646:2017, fifth edition, plus\n   the following additions from Amendment 1 to the fifth edition:\n   - 56 emoji characters\n   - 285 hentaigana\n   - 3 additional Zanabazar Square characters */\n#define __STDC_ISO_10646__\t\t201706L\n\n#endif\n", 2290, 0) = 2290
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/sys", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/sys", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/sys", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/local/include/sys", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/include/sys", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/include/x86_64-linux-gnu/sys", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/sys/cdefs.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/sys/cdefs.h", 4096) = 41
fstat(3, {st_mode=S_IFREG|0644, st_size=18308, ...}) = 0
mmap(NULL, 18308, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e0a4e5000
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/wordsize.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/wordsize.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/wordsize.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/wordsize.h", 4096) = 45
fstat(3, {st_mode=S_IFREG|0644, st_size=442, ...}) = 0
pread64(3, "/* Determine the wordsize from the preprocessor defines.  */\n\n#if defined __x86_64__ && !defined __ILP32__\n# define __WORDSIZE\t64\n#else\n# define __WORDSIZE\t32\n#define __WORDSIZE32_SIZE_ULONG\t\t0\n#define __WORDSIZE32_PTRDIFF_LONG\t0\n#endif\n\n#ifdef __x86_64__\n# define __WORDSIZE_TIME64_COMPAT32\t1\n/* Both x86-64 and x32 use the 64-bit system call interface.  */\n# define __SYSCALL_WORDSIZE\t\t64\n#else\n# define __WORDSIZE_TIME64_COMPAT32\t0\n#endif\n", 442, 0) = 442
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/long-double.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/long-double.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/long-double.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/long-double.h", 4096) = 48
fstat(3, {st_mode=S_IFREG|0644, st_size=962, ...}) = 0
pread64(3, "/* Properties of long double type.  ldbl-96 version.\n   Copyright (C) 2016-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License  published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/* long double is distinct from double, so there is nothing to\n   define here.  */\n#define __LONG_DOUBLE_USES_FLOAT128 0\n", 962, 0) = 962
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/gnu", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/gnu", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/gnu", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/local/include/gnu", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/include/gnu", 0x7ffce056dd58) = -1 ENOENT (No such file or directory)
stat("/usr/include/x86_64-linux-gnu/gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/gnu/stubs.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/gnu/stubs.h", 4096) = 41
fstat(3, {st_mode=S_IFREG|0644, st_size=384, ...}) = 0
pread64(3, "/* This file is automatically generated.\n   This file selects the right generated file of `__stub_FUNCTION' macros\n   based on the architecture being compiled for.  */\n\n\n#if !defined __x86_64__\n# include <gnu/stubs-32.h>\n#endif\n#if defined __x86_64__ && defined __LP64__\n# include <gnu/stubs-64.h>\n#endif\n#if defined __x86_64__ && defined __ILP32__\n# include <gnu/stubs-x32.h>\n#endif\n", 384, 0) = 384
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h", 4096) = 44
fstat(3, {st_mode=S_IFREG|0644, st_size=523, ...}) = 0
pread64(3, "/* This file is automatically generated.\n   It defines a symbol `__stub_FUNCTION' for each function\n   in the C library which is a stub, meaning it will fail\n   every time called, usually setting errno to ENOSYS.  */\n\n#ifdef _LIBC\n# error Applications may not define the macro _LIBC\n#endif\n\n#define __stub___compat_bdflush\n#define __stub_chflags\n#define __stub_fchflags\n#define __stub_gtty\n#define __stub_lchmod\n#define __stub_revoke\n#define __stub_setlogin\n#define __stub_sigreturn\n#define __stub_sstk\n#define __stub_stty\n", 523, 0) = 523
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x14d7000)                          = 0x14d7000
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/stddef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/stddef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/stddef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/stddef.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/stddef.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/lib/llvm-12/lib/clang/12.0.0/include/stddef.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=3589, ...}) = 0
pread64(3, "/*===---- stddef.h - Basic type definitions --------------------------------===\n *\n * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n * See https://llvm.org/LICENSE.txt for license information.\n * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n *\n *===-----------------------------------------------------------------------===\n */\n\n#if !defined(__STDDEF_H) || defined(__need_ptrdiff_t) ||                       \\\n    defined(__need_size_t) || defined(__need_wchar_t) ||                       \\\n    defined(__need_NULL) || defined(__need_wint_t)\n\n#if !defined(__need_ptrdiff_t) && !defined(__need_size_t) &&                   \\\n    !defined(__need_wchar_t) && !defined(__need_NULL) &&                       \\\n    !defined(__need_wint_t)\n/* Always define miscellaneous pieces when modules are available. */\n#if !__has_feature(modules)\n#define __STDDEF_H\n#endif\n#define __need_ptrdiff_t\n#define __need_size_t\n#define __need_wchar_t\n#define __need_NULL\n#define __need_STDDEF_H_misc\n/* __need_wint_t is intentionally not defined here. */\n#endif\n\n#if defined(__need_ptrdiff_t)\n#if !defined(_PTRDIFF_T) || __has_feature(modules)\n/* Always define ptrdiff_t when modules are available. */\n#if !__has_feature(modules)\n#define _PTRDIFF_T\n#endif\ntypedef __PTRDIFF_TYPE__ ptrdiff_t;\n#endif\n#undef __need_ptrdiff_t\n#endif /* defined(__need_ptrdiff_t) */\n\n#if defined(__need_size_t)\n#if !defined(_SIZE_T) || __has_feature(modules)\n/* Always define size_t when modules are available. */\n#if !__has_feature(modules)\n#define _SIZE_T\n#endif\ntypedef __SIZE_TYPE__ size_t;\n#endif\n#undef __need_size_t\n#endif /*defined(__need_size_t) */\n\n#if defined(__need_STDDEF_H_misc)\n/* ISO9899:2011 7.20 (C11 Annex K): Define rsize_t if __STDC_WANT_LIB_EXT1__ is\n * enabled. */\n#if (defined(__STDC_WANT_LIB_EXT1__) && __STDC_WANT_LIB_EXT1__ >= 1 && \\\n     !defined(_RSIZE_T)) || __has_feature(modules)\n/* Always define rsize_t when modules are available. */\n#if !__has_feature(modules)\n#define _RSIZE_T\n#endif\ntypedef __SIZE_TYPE__ rsize_t;\n#endif\n#endif /* defined(__need_STDDEF_H_misc) */\n\n#if defined(__need_wchar_t)\n#ifndef __cplusplus\n/* Always define wchar_t when modules are available. */\n#if !defined(_WCHAR_T) || __has_feature(modules)\n#if !__has_feature(modules)\n#define _WCHAR_T\n#if defined(_MSC_EXTENSIONS)\n#define _WCHAR_T_DEFINED\n#endif\n#endif\ntypedef __WCHAR_TYPE__ wchar_t;\n#endif\n#endif\n#undef __need_wchar_t\n#endif /* defined(__need_wchar_t) */\n\n#if defined(__need_NULL)\n#undef NULL\n#ifdef __cplusplus\n#  if !defined(__MINGW32__) && !defined(_MSC_VER)\n#    define NULL __null\n#  else\n#    define NULL 0\n#  endif\n#else\n#  define NULL ((void*)0)\n#endif\n#ifdef __cplusplus\n#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)\nnamespace std { typedef decltype(nullptr) nullptr_t; }\nusing ::std::nullptr_t;\n#endif\n#endif\n#undef __need_NULL\n#endif /* defined(__need_NULL) */\n\n#if defined(__need_STDDEF_H_misc)\n#if __STDC_VERSION__ >= 201112L || __cplusplus >= 201103L\n#include \"__stddef_max_align_t.h\"\n#endif\n#define offsetof(t, d) __builtin_offsetof(t, d)\n#undef __need_STDDEF_H_misc\n#endif  /* defined(__need_STDDEF_H_misc) */\n\n/* Some C libraries expect to see a wint_t here. Others (notably MinGW) will use\n__WINT_TYPE__ directly; accommodate both by requiring __need_wint_t */\n#if defined(__need_wint_t)\n/* Always define wint_t when modules are available. */\n#if !defined(_WINT_T) || __has_feature(modules)\n#if !__has_feature(modules)\n#define _WINT_T\n#endif\ntypedef __WINT_TYPE__ wint_t;\n#endif\n#undef __need_wint_t\n#endif /* __need_wint_t */\n\n#endif\n", 3589, 0) = 3589
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/stdarg.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/stdarg.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/stdarg.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/stdarg.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdarg.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdarg.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=1115, ...}) = 0
pread64(3, "/*===---- stdarg.h - Variable argument handling ----------------------------===\n *\n * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n * See https://llvm.org/LICENSE.txt for license information.\n * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n *\n *===-----------------------------------------------------------------------===\n */\n\n#ifndef __STDARG_H\n#define __STDARG_H\n\n#ifndef _VA_LIST\ntypedef __builtin_va_list va_list;\n#define _VA_LIST\n#endif\n#define va_start(ap, param) __builtin_va_start(ap, param)\n#define va_end(ap)          __builtin_va_end(ap)\n#define va_arg(ap, type)    __builtin_va_arg(ap, type)\n\n/* GCC always defines __va_copy, but does not define va_copy unless in c99 mode\n * or -ansi is not specified, since it was not part of C90.\n */\n#define __va_copy(d,s) __builtin_va_copy(d,s)\n\n#if __STDC_VERSION__ >= 199901L || __cplusplus >= 201103L || !defined(__STRICT_ANSI__)\n#define va_copy(dest, src)  __builtin_va_copy(dest, src)\n#endif\n\n#ifndef __GNUC_VA_LIST\n#define __GNUC_VA_LIST 1\ntypedef __builtin_va_list __gnuc_va_list;\n#endif\n\n#endif /* __STDARG_H */\n", 1115, 0) = 1115
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/types.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/types.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types.h", 4096) = 42
fstat(3, {st_mode=S_IFREG|0644, st_size=8757, ...}) = 0
pread64(3, "/* bits/types.h -- definitions of __*_t types underlying *_t types.\n   Copyright (C) 2002-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/*\n * Never include this file directly; use <sys/types.h> instead.\n */\n\n#ifndef\t_BITS_TYPES_H\n#define\t_BITS_TYPES_H\t1\n\n#include <features.h>\n#include <bits/wordsize.h>\n#include <bits/timesize.h>\n\n/* Convenience types.  */\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n/* Fixed-size types, underlying types depend on word size and compiler.  */\ntypedef signed char __int8_t;\ntypedef unsigned char __uint8_t;\ntypedef signed short int __int16_t;\ntypedef unsigned short int __uint16_t;\ntypedef signed int __int32_t;\ntypedef unsigned int __uint32_t;\n#if __WORDSIZE == 64\ntypedef signed long int __int64_t;\ntypedef unsigned long int __uint64_t;\n#else\n__extension__ typedef signed long long int __int64_t;\n__extension__ typedef unsigned long long int __uint64_t;\n#endif\n\n/* Smallest types with at least a given width.  */\ntypedef __int8_t __int_least8_t;\ntypedef __uint8_t __uint_least8_t;\ntypedef __int16_t __int_least16_t;\ntypedef __uint16_t __uint_least16_t;\ntypedef __int32_t __int_least32_t;\ntypedef __uint32_t __uint_least32_t;\ntypedef __int64_t __int_least64_t;\ntypedef __uint64_t __uint_least64_t;\n\n/* quad_t is also 64 bits.  */\n#if __WORDSIZE == 64\ntypedef long int __quad_t;\ntypedef unsigned long int __u_quad_t;\n#else\n__extension__ typedef long long int __quad_t;\n__extension__ typedef unsigned long long int __u_quad_t;\n#endif\n\n/* Largest integral types.  */\n#if __WORDSIZE == 64\ntypedef long int __intmax_t;\ntypedef unsigned long int __uintmax_t;\n#else\n__extension__ typedef long long int __intmax_t;\n__extension__ typedef unsigned long long int __uintmax_t;\n#endif\n\n\n/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE\n   macros for each of the OS types we define below.  The definitions\n   of those macros must use the following macros for underlying types.\n   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned\n   variants of each of the following integer types on this machine.\n\n\t16\t\t-- \"natural\" 16-bit type (always short)\n\t32\t\t-- \"natural\" 32-bit type (always int)\n\t64\t\t-- \"natural\" 64-bit type (long or long long)\n\tLONG32\t\t-- 32-bit type, traditionally long\n\tQUAD\t\t-- 64-bit type, traditionally long long\n\tWORD\t\t-- natural type of __WORDSIZE bits (int or long)\n\tLONGWORD\t-- type of __WORDSIZE bits, traditionally long\n\n   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the\n   conventional uses of `long' or `long long' type modifiers match the\n   types we define, even when a less-adorned type would be the same size.\n   This matters for (somewhat) portably writing printf/scanf formats for\n   these types, where using the appropriate l or ll format modifiers can\n   make the typedefs and the formats match up across all GNU platforms.  If\n   we used `long' when it's 64 bits where `long long' is expected, then the\n   compiler would warn about the formats not matching the argument types,\n   and the programmer changing them to shut up the compiler would break the\n   program's portability.\n\n   Here we assume what is presently the case in all the GCC configurations\n   we support: long long is always 64 bits, long is always word/address size,\n   and int is always 32 bits.  */\n\n#define\t__S16_TYPE\t\tshort int\n#define __U16_TYPE\t\tunsigned short int\n#define\t__S32_TYPE\t\tint\n#define __U32_TYPE\t\tunsigned int\n#define __SLONGWORD_TYPE\tlong int\n#define __ULONGWORD_TYPE\tunsigned long int\n#if __WORDSIZE == 32\n# define __SQUAD_TYPE\t\t__int64_t\n# define __UQUAD_TYPE\t\t__uint64_t\n# define __SWORD_TYPE\t\tint\n# define __UWORD_TYPE\t\tunsigned int\n# define __SLONG32_TYPE\t\tlong int\n# define __ULONG32_TYPE\t\tunsigned long int\n# define __S64_TYPE\t\t__int64_t\n# define __U64_TYPE\t\t__uint64_t\n/* We want __extension__ before typedef's that use nonstandard base types\n   such as `long long' in C89 mode.  */\n# define __STD_TYPE\t\t__extension__ typedef\n#elif __WORDSIZE == 64\n# define __SQUAD_TYPE\t\tlong int\n# define __UQUAD_TYPE\t\tunsigned long int\n# define __SWORD_TYPE\t\tlong int\n# define __UWORD_TYPE\t\tunsigned long int\n# define __SLONG32_TYPE\t\tint\n# define __ULONG32_TYPE\t\tunsigned int\n# define __S64_TYPE\t\tlong int\n# define __U64_TYPE\t\tunsigned long int\n/* No need to mark the typedef with __extension__.   */\n# define __STD_TYPE\t\ttypedef\n#else\n# error\n#endif\n#include <bits/typesizes.h>\t/* Defines __*_T_TYPE macros.  */\n#include <bits/time64.h>\t/* Defines __TIME*_T_TYPE macros.  */\n\n\n__STD_TYPE __DEV_T_TYPE __dev_t;\t/* Type of device numbers.  */\n__STD_TYPE __UID_T_TYPE __uid_t;\t/* Type of user identifications.  */\n__STD_TYPE __GID_T_TYPE __gid_t;\t/* Type of group identifications.  */\n__STD_TYPE __INO_T_TYPE __ino_t;\t/* Type of file serial numbers.  */\n__STD_TYPE __INO64_T_TYPE __ino64_t;\t/* Type of file serial numbers (LFS).*/\n__STD_TYPE __MODE_T_TYPE __mode_t;\t/* Type of file attribute bitmasks.  */\n__STD_TYPE __NLINK_T_TYPE __nlink_t;\t/* Type of file link counts.  */\n__STD_TYPE __OFF_T_TYPE __off_t;\t/* Type of file sizes and offsets.  */\n__STD_TYPE __OFF64_T_TYPE __off64_t;\t/* Type of file sizes and offsets (LFS).  */\n__STD_TYPE __PID_T_TYPE __pid_t;\t/* Type of process identifications.  */\n__STD_TYPE __FSID_T_TYPE __fsid_t;\t/* Type of file system IDs.  */\n__STD_TYPE __CLOCK_T_TYPE __clock_t;\t/* Type of CPU usage counts.  */\n__STD_TYPE __RLIM_T_TYPE __rlim_t;\t/* Type for resource measurement.  */\n__STD_TYPE __RLIM64_T_TYPE __rlim64_t;\t/* Type for resource measurement (LFS).  */\n__STD_TYPE __ID_T_TYPE __id_t;\t\t/* General type for IDs.  */\n__STD_TYPE __TIME_T_TYPE __time_t;\t/* Seconds since the Epoch.  */\n__STD_TYPE __USECONDS_T_TYPE __useconds_t; /* Count of microseconds.  */\n__STD_TYPE __SUSECONDS_T_TYPE __suseconds_t; /* Signed count of microseconds.  */\n\n__STD_TYPE __DADDR_T_TYPE __daddr_t;\t/* The type of a disk address.  */\n__STD_TYPE __KEY_T_TYPE __key_t;\t/* Type of an IPC key.  */\n\n/* Clock ID used in clock and timer functions.  */\n__STD_TYPE __CLOCKID_T_TYPE __clockid_t;\n\n/* Timer ID returned by `timer_create'.  */\n__STD_TYPE __TIMER_T_TYPE __timer_t;\n\n/* Type to represent block size.  */\n__STD_TYPE __BLKSIZE_T_TYPE __blksize_t;\n\n/* Types from the Large File Support interface.  */\n\n/* Type to count number of disk blocks.  */\n__STD_TYPE __BLKCNT_T_TYPE __blkcnt_t;\n__STD_TYPE __BLKCNT64_T_TYPE __blkcnt64_t;\n\n/* Type to count file system blocks.  */\n__STD_TYPE __FSBLKCNT_T_TYPE __fsblkcnt_t;\n__STD_TYPE __FSBLKCNT64_T_TYPE __fsblkcnt64_t;\n\n/* Type to count file system nodes.  */\n__STD_TYPE __FSFILCNT_T_TYPE __fsfilcnt_t;\n__STD_TYPE __FSFILCNT64_T_TYPE __fsfilcnt64_t;\n\n/* Type of miscellaneous file system fields.  */\n__STD_TYPE __FSWORD_T_TYPE __fsword_t;\n\n__STD_TYPE __SSIZE_T_TYPE __ssize_t; /* Type of a byte count, or error.  */\n\n/* Signed long type used in system calls.  */\n__STD_TYPE __SYSCALL_SLONG_TYPE __syscall_slong_t;\n/* Unsigned long type used in system calls.  */\n__STD_TYPE __SYSCALL_ULONG_TYPE __syscall_ulong_t;\n\n/* These few don't really vary by system, they always correspond\n   to one of the other defined types.  */\ntypedef __off64_t __loff_t;\t/* Type of file sizes and offsets (LFS).  */\ntypedef char *__caddr_t;\n\n/* Duplicates info from stdint.h but this is used in unistd.h.  */\n__STD_TYPE __SWORD_TYPE __intptr_t;\n\n/* Duplicate info from sys/socket.h.  */\n__STD_TYPE __U32_TYPE __socklen_t;\n\n/* C99: An integer type that can be accessed as an atomic entity,\n   even in the presence of asynchronous interrupts.\n   It is not currently necessary for this to be machine-specific.  */\ntypedef int __sig_atomic_t;\n\n/* Seconds since the Epoch, visible to user code when time_t is too\n   narrow only for consistency with the old way of widening too-narrow\n   types.  User code should never use __time64_t.  */\n#if __TIMESIZE == 64 && defined __LIBC\n# define __time64_t __time_t\n#elif __TIMESIZE != 64\n__STD_TYPE __TIME64_T_TYPE __time64_t;\n#endif\n\n#undef __STD_TYPE\n\n#endif /* bits/types.h */\n", 8757, 0) = 8757
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/timesize.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/timesize.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/timesize.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/timesize.h", 4096) = 45
fstat(3, {st_mode=S_IFREG|0644, st_size=1081, ...}) = 0
pread64(3, "/* Bit size of the time_t type at glibc build time, x86-64 and x32 case.\n   Copyright (C) 2018-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#if defined __x86_64__ && defined __ILP32__\n/* For x32, time is 64-bit even though word size is 32-bit.  */\n# define __TIMESIZE\t64\n#else\n/* For others, time size is word size.  */\n# define __TIMESIZE\t__WORDSIZE\n#endif\n", 1081, 0) = 1081
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/typesizes.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/typesizes.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/typesizes.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/typesizes.h", 4096) = 46
fstat(3, {st_mode=S_IFREG|0644, st_size=3546, ...}) = 0
pread64(3, "/* bits/typesizes.h -- underlying types for *_t.  Linux/x86-64 version.\n   Copyright (C) 2012-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_TYPES_H\n# error \"Never include <bits/typesizes.h> directly; use <sys/types.h> instead.\"\n#endif\n\n#ifndef\t_BITS_TYPESIZES_H\n#define\t_BITS_TYPESIZES_H\t1\n\n/* See <bits/types.h> for the meaning of these macros.  This file exists so\n   that <bits/types.h> need not vary across different GNU platforms.  */\n\n/* X32 kernel interface is 64-bit.  */\n#if defined __x86_64__ && defined __ILP32__\n# define __SYSCALL_SLONG_TYPE\t__SQUAD_TYPE\n# define __SYSCALL_ULONG_TYPE\t__UQUAD_TYPE\n#else\n# define __SYSCALL_SLONG_TYPE\t__SLONGWORD_TYPE\n# define __SYSCALL_ULONG_TYPE\t__ULONGWORD_TYPE\n#endif\n\n#define __DEV_T_TYPE\t\t__UQUAD_TYPE\n#define __UID_T_TYPE\t\t__U32_TYPE\n#define __GID_T_TYPE\t\t__U32_TYPE\n#define __INO_T_TYPE\t\t__SYSCALL_ULONG_TYPE\n#define __INO64_T_TYPE\t\t__UQUAD_TYPE\n#define __MODE_T_TYPE\t\t__U32_TYPE\n#ifdef __x86_64__\n# define __NLINK_T_TYPE\t\t__SYSCALL_ULONG_TYPE\n# define __FSWORD_T_TYPE\t__SYSCALL_SLONG_TYPE\n#else\n# define __NLINK_T_TYPE\t\t__UWORD_TYPE\n# define __FSWORD_T_TYPE\t__SWORD_TYPE\n#endif\n#define __OFF_T_TYPE\t\t__SYSCALL_SLONG_TYPE\n#define __OFF64_T_TYPE\t\t__SQUAD_TYPE\n#define __PID_T_TYPE\t\t__S32_TYPE\n#define __RLIM_T_TYPE\t\t__SYSCALL_ULONG_TYPE\n#define __RLIM64_T_TYPE\t\t__UQUAD_TYPE\n#define __BLKCNT_T_TYPE\t\t__SYSCALL_SLONG_TYPE\n#define __BLKCNT64_T_TYPE\t__SQUAD_TYPE\n#define __FSBLKCNT_T_TYPE\t__SYSCALL_ULONG_TYPE\n#define __FSBLKCNT64_T_TYPE\t__UQUAD_TYPE\n#define __FSFILCNT_T_TYPE\t__SYSCALL_ULONG_TYPE\n#define __FSFILCNT64_T_TYPE\t__UQUAD_TYPE\n#define __ID_T_TYPE\t\t__U32_TYPE\n#define __CLOCK_T_TYPE\t\t__SYSCALL_SLONG_TYPE\n#define __TIME_T_TYPE\t\t__SYSCALL_SLONG_TYPE\n#define __USECONDS_T_TYPE\t__U32_TYPE\n#define __SUSECONDS_T_TYPE\t__SYSCALL_SLONG_TYPE\n#define __DADDR_T_TYPE\t\t__S32_TYPE\n#define __KEY_T_TYPE\t\t__S32_TYPE\n#define __CLOCKID_T_TYPE\t__S32_TYPE\n#define __TIMER_T_TYPE\t\tvoid *\n#define __BLKSIZE_T_TYPE\t__SYSCALL_SLONG_TYPE\n#define __FSID_T_TYPE\t\tstruct { int __val[2]; }\n#define __SSIZE_T_TYPE\t\t__SWORD_TYPE\n#define __CPU_MASK_TYPE \t__SYSCALL_ULONG_TYPE\n\n#ifdef __x86_64__\n/* Tell the libc code that off_t and off64_t are actually the same type\n   for all ABI purposes, even if possibly expressed as different base types\n   for C type-checking purposes.  */\n# define __OFF_T_MATCHES_OFF64_T\t1\n\n/* Same for ino_t and ino64_t.  */\n# define __INO_T_MATCHES_INO64_T\t1\n\n/* And for __rlim_t and __rlim64_t.  */\n# define __RLIM_T_MATCHES_RLIM64_T\t1\n\n/* And for fsblkcnt_t, fsblkcnt64_t, fsfilcnt_t and fsfilcnt64_t.  */\n# define __STATFS_MATCHES_STATFS64  1\n#else\n# define __RLIM_T_MATCHES_RLIM64_T\t0\n\n# define __STATFS_MATCHES_STATFS64  0\n#endif\n\n/* Number of descriptors that can fit in an `fd_set'.  */\n#define __FD_SETSIZE\t\t1024\n\n\n#endif /* bits/typesizes.h */\n", 3546, 0) = 3546
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/time64.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/time64.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/time64.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/time64.h", 4096) = 43
fstat(3, {st_mode=S_IFREG|0644, st_size=1340, ...}) = 0
pread64(3, "/* bits/time64.h -- underlying types for __time64_t.  Generic version.\n   Copyright (C) 2018-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_TYPES_H\n# error \"Never include <bits/time64.h> directly; use <sys/types.h> instead.\"\n#endif\n\n#ifndef\t_BITS_TIME64_H\n#define\t_BITS_TIME64_H\t1\n\n/* Define __TIME64_T_TYPE so that it is always a 64-bit type.  */\n\n#if __TIMESIZE == 64\n/* If we already have 64-bit time type then use it.  */\n# define __TIME64_T_TYPE\t\t__TIME_T_TYPE\n#else\n/* Define a 64-bit time type alongsize the 32-bit one.  */\n# define __TIME64_T_TYPE\t\t__SQUAD_TYPE\n#endif\n\n#endif /* bits/time64.h */\n", 1340, 0) = 1340
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/types", 0x7ffce056ca48) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/types", 0x7ffce056ca48) = -1 ENOENT (No such file or directory)
stat("/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/bits/types", 0x7ffce056ca48) = -1 ENOENT (No such file or directory)
stat("/usr/local/include/bits/types", 0x7ffce056ca48) = -1 ENOENT (No such file or directory)
stat("/usr/lib/llvm-12/lib/clang/12.0.0/include/bits/types", 0x7ffce056ca48) = -1 ENOENT (No such file or directory)
stat("/usr/include/x86_64-linux-gnu/bits/types", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h", 4096) = 51
fstat(3, {st_mode=S_IFREG|0644, st_size=381, ...}) = 0
pread64(3, "#ifndef _____fpos_t_defined\n#define _____fpos_t_defined 1\n\n#include <bits/types.h>\n#include <bits/types/__mbstate_t.h>\n\n/* The tag name of this struct is _G_fpos_t to preserve historic\n   C++ mangled names for functions taking fpos_t arguments.\n   That name should not be used in new code.  */\ntypedef struct _G_fpos_t\n{\n  __off_t __pos;\n  __mbstate_t __state;\n} __fpos_t;\n\n#endif\n", 381, 0) = 381
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", 4096) = 54
fstat(3, {st_mode=S_IFREG|0644, st_size=564, ...}) = 0
pread64(3, "#ifndef ____mbstate_t_defined\n#define ____mbstate_t_defined 1\n\n/* Integral type unchanged by default argument promotions that can\n   hold any value corresponding to members of the extended character\n   set, as well as at least one value that does not correspond to any\n   member of the extended character set.  */\n#ifndef __WINT_TYPE__\n# define __WINT_TYPE__ unsigned int\n#endif\n\n/* Conversion state information.  */\ntypedef struct\n{\n  int __count;\n  union\n  {\n    __WINT_TYPE__ __wch;\n    char __wchb[4];\n  } __value;\t\t/* Value so far.  */\n} __mbstate_t;\n\n#endif\n", 564, 0) = 564
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h", 4096) = 53
fstat(3, {st_mode=S_IFREG|0644, st_size=410, ...}) = 0
pread64(3, "#ifndef _____fpos64_t_defined\n#define _____fpos64_t_defined 1\n\n#include <bits/types.h>\n#include <bits/types/__mbstate_t.h>\n\n/* The tag name of this struct is _G_fpos64_t to preserve historic\n   C++ mangled names for functions taking fpos_t and/or fpos64_t\n   arguments.  That name should not be used in new code.  */\ntypedef struct _G_fpos64_t\n{\n  __off64_t __pos;\n  __mbstate_t __state;\n} __fpos64_t;\n\n#endif\n", 410, 0) = 410
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", 4096) = 49
fstat(3, {st_mode=S_IFREG|0644, st_size=110, ...}) = 0
pread64(3, "#ifndef ____FILE_defined\n#define ____FILE_defined 1\n\nstruct _IO_FILE;\ntypedef struct _IO_FILE __FILE;\n\n#endif\n", 110, 0) = 110
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", 4096) = 47
fstat(3, {st_mode=S_IFREG|0644, st_size=180, ...}) = 0
pread64(3, "#ifndef __FILE_defined\n#define __FILE_defined 1\n\nstruct _IO_FILE;\n\n/* The opaque type of streams.  This is the definition used elsewhere.  */\ntypedef struct _IO_FILE FILE;\n\n#endif\n", 180, 0) = 180
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", 4096) = 54
fstat(3, {st_mode=S_IFREG|0644, st_size=4104, ...}) = 0
pread64(3, "/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef __struct_FILE_defined\n#define __struct_FILE_defined 1\n\n/* Caution: The contents of this file are not part of the official\n   stdio.h API.  However, much of it is part of the official *binary*\n   interface, and therefore cannot be changed.  */\n\n#if defined _IO_USE_OLD_IO_FILE && !defined _LIBC\n# error \"_IO_USE_OLD_IO_FILE should only be defined when building libc itself\"\n#endif\n\n#if defined _IO_lock_t_defined && !defined _LIBC\n# error \"_IO_lock_t_defined should only be defined when building libc itself\"\n#endif\n\n#include <bits/types.h>\n\nstruct _IO_FILE;\nstruct _IO_marker;\nstruct _IO_codecvt;\nstruct _IO_wide_data;\n\n/* During the build of glibc itself, _IO_lock_t will already have been\n   defined by internal headers.  */\n#ifndef _IO_lock_t_defined\ntypedef void _IO_lock_t;\n#endif\n\n/* The tag name of this struct is _IO_FILE to preserve historic\n   C++ mangled names for functions taking FILE* arguments.\n   That name should not be used in new code.  */\nstruct _IO_FILE\n{\n  int _flags;\t\t/* High-order word is _IO_MAGIC; rest is flags. */\n\n  /* The following pointers correspond to the C++ streambuf protocol. */\n  char *_IO_read_ptr;\t/* Current read pointer */\n  char *_IO_read_end;\t/* End of get area. */\n  char *_IO_read_base;\t/* Start of putback+get area. */\n  char *_IO_write_base;\t/* Start of put area. */\n  char *_IO_write_ptr;\t/* Current put pointer. */\n  char *_IO_write_end;\t/* End of put area. */\n  char *_IO_buf_base;\t/* Start of reserve area. */\n  char *_IO_buf_end;\t/* End of reserve area. */\n\n  /* The following fields are used to support backing up and undo. */\n  char *_IO_save_base; /* Pointer to start of non-current get area. */\n  char *_IO_backup_base;  /* Pointer to first valid character of backup area */\n  char *_IO_save_end; /* Pointer to end of non-current get area. */\n\n  struct _IO_marker *_markers;\n\n  struct _IO_FILE *_chain;\n\n  int _fileno;\n  int _flags2;\n  __off_t _old_offset; /* This used to be _offset but it's too small.  */\n\n  /* 1+column number of pbase(); 0 is unknown. */\n  unsigned short _cur_column;\n  signed char _vtable_offset;\n  char _shortbuf[1];\n\n  _IO_lock_t *_lock;\n#ifdef _IO_USE_OLD_IO_FILE\n};\n\nstruct _IO_FILE_complete\n{\n  struct _IO_FILE _file;\n#endif\n  __off64_t _offset;\n  /* Wide character stream stuff.  */\n  struct _IO_codecvt *_codecvt;\n  struct _IO_wide_data *_wide_data;\n  struct _IO_FILE *_freeres_list;\n  void *_freeres_buf;\n  size_t __pad5;\n  int _mode;\n  /* Make sure we don't get into trouble again.  */\n  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];\n};\n\n/* These macros are used by bits/stdio.h and internal headers.  */\n#define __getc_unlocked_body(_fp)\t\t\t\t\t\\\n  (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end)\t\\\n   ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)\n\n#define __putc_unlocked_body(_ch, _fp)\t\t\t\t\t\\\n  (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end)\t\\\n   ? __overflow (_fp, (unsigned char) (_ch))\t\t\t\t\\\n   : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))\n\n#define _IO_EOF_SEEN 0x0010\n#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)\n\n#define _IO_ERR_SEEN 0x0020\n#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)\n\n#define _IO_USER_LOCK 0x8000\n/* Many more flag bits are defined internally.  */\n\n#endif\n", 4104, 0) = 4104
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h", 4096) = 64
fstat(3, {st_mode=S_IFREG|0644, st_size=2725, ...}) = 0
brk(0x14f8000)                          = 0x14f8000
pread64(3, "/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef __cookie_io_functions_t_defined\n#define __cookie_io_functions_t_defined 1\n\n#include <bits/types.h>\n\n/* Functions to do I/O and file management for a stream.  */\n\n/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.\n   Return number of bytes read.  */\ntypedef __ssize_t cookie_read_function_t (void *__cookie, char *__buf,\n                                          size_t __nbytes);\n\n/* Write NBYTES bytes pointed to by BUF to COOKIE.  Write all NBYTES bytes\n   unless there is an error.  Return number of bytes written.  If\n   there is an error, return 0 and do not write anything.  If the file\n   has been opened for append (__mode.__append set), then set the file\n   pointer to the end of the file and then do the write; if not, just\n   write at the current file pointer.  */\ntypedef __ssize_t cookie_write_function_t (void *__cookie, const char *__buf,\n                                           size_t __nbytes);\n\n/* Move COOKIE's file position to *POS bytes from the\n   beginning of the file (if W is SEEK_SET),\n   the current position (if W is SEEK_CUR),\n   or the end of the file (if W is SEEK_END).\n   Set *POS to the new file position.\n   Returns zero if successful, nonzero if not.  */\ntypedef int cookie_seek_function_t (void *__cookie, __off64_t *__pos, int __w);\n\n/* Close COOKIE.  */\ntypedef int cookie_close_function_t (void *__cookie);\n\n/* The structure with the cookie function pointers.\n   The tag name of this struct is _IO_cookie_io_functions_t to\n   preserve historic C++ mangled names for functions taking\n   cookie_io_functions_t arguments.  That name should not be used in\n   new code.  */\ntypedef struct _IO_cookie_io_functions_t\n{\n  cookie_read_function_t *read;\t\t/* Read bytes.  */\n  cookie_write_function_t *write;\t/* Write bytes.  */\n  cookie_seek_function_t *seek;\t\t/* Seek/tell file position.  */\n  cookie_close_function_t *close;\t/* Close file.  */\n} cookie_io_functions_t;\n\n#endif\n", 2725, 0) = 2725
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stdio_lim.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/stdio_lim.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h", 4096) = 46
fstat(3, {st_mode=S_IFREG|0644, st_size=1213, ...}) = 0
pread64(3, "/* Copyright (C) 1994-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_STDIO_LIM_H\n#define _BITS_STDIO_LIM_H 1\n\n#ifndef _STDIO_H\n# error \"Never include <bits/stdio_lim.h> directly; use <stdio.h> instead.\"\n#endif\n\n#define L_tmpnam 20\n#define TMP_MAX 238328\n#define FILENAME_MAX 4096\n\n#ifdef __USE_POSIX\n# define L_ctermid 9\n# if !defined __USE_XOPEN2K || defined __USE_GNU\n#  define L_cuserid 9\n# endif\n#endif\n\n#undef  FOPEN_MAX\n#define FOPEN_MAX 16\n\n#endif /* bits/stdio_lim.h */\n", 1213, 0) = 1213
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/sys_errlist.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/sys_errlist.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h", 4096) = 48
fstat(3, {st_mode=S_IFREG|0644, st_size=1216, ...}) = 0
pread64(3, "/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.\n   Copyright (C) 2002-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _STDIO_H\n# error \"Never include <bits/sys_errlist.h> directly; use <stdio.h> instead.\"\n#endif\n\n/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */\n\n#ifdef  __USE_MISC\nextern int sys_nerr;\nextern const char *const sys_errlist[];\n#endif\n#ifdef  __USE_GNU\nextern int _sys_nerr;\nextern const char *const _sys_errlist[];\n#endif\n", 1216, 0) = 1216
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x1519000)                          = 0x1519000
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/stdio.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/stdio.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/stdio.h", 4096) = 42
fstat(3, {st_mode=S_IFREG|0644, st_size=5584, ...}) = 0
pread64(3, "/* Optimizing macros and inline functions for stdio functions.\n   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_STDIO_H\n#define _BITS_STDIO_H 1\n\n#ifndef _STDIO_H\n# error \"Never include <bits/stdio.h> directly; use <stdio.h> instead.\"\n#endif\n\n#ifndef __extern_inline\n# define __STDIO_INLINE inline\n#else\n# define __STDIO_INLINE __extern_inline\n#endif\n\n\n#ifdef __USE_EXTERN_INLINES\n/* For -D_FORTIFY_SOURCE{,=2} bits/stdio2.h will define a different\n   inline.  */\n# if !(__USE_FORTIFY_LEVEL > 0 && defined __fortify_function)\n/* Write formatted output to stdout from argument list ARG.  */\n__STDIO_INLINE int\nvprintf (const char *__restrict __fmt, __gnuc_va_list __arg)\n{\n  return vfprintf (stdout, __fmt, __arg);\n}\n# endif\n\n/* Read a character from stdin.  */\n__STDIO_INLINE int\ngetchar (void)\n{\n  return getc (stdin);\n}\n\n\n# ifdef __USE_MISC\n/* Faster version when locking is not necessary.  */\n__STDIO_INLINE int\nfgetc_unlocked (FILE *__fp)\n{\n  return __getc_unlocked_body (__fp);\n}\n# endif /* misc */\n\n\n# ifdef __USE_POSIX\n/* This is defined in POSIX.1:1996.  */\n__STDIO_INLINE int\ngetc_unlocked (FILE *__fp)\n{\n  return __getc_unlocked_body (__fp);\n}\n\n/* This is defined in POSIX.1:1996.  */\n__STDIO_INLINE int\ngetchar_unlocked (void)\n{\n  return __getc_unlocked_body (stdin);\n}\n# endif\t/* POSIX */\n\n\n/* Write a character to stdout.  */\n__STDIO_INLINE int\nputchar (int __c)\n{\n  return putc (__c, stdout);\n}\n\n\n# ifdef __USE_MISC\n/* Faster version when locking is not necessary.  */\n__STDIO_INLINE int\nfputc_unlocked (int __c, FILE *__stream)\n{\n  return __putc_unlocked_body (__c, __stream);\n}\n# endif /* misc */\n\n\n# ifdef __USE_POSIX\n/* This is defined in POSIX.1:1996.  */\n__STDIO_INLINE int\nputc_unlocked (int __c, FILE *__stream)\n{\n  return __putc_unlocked_body (__c, __stream);\n}\n\n/* This is defined in POSIX.1:1996.  */\n__STDIO_INLINE int\nputchar_unlocked (int __c)\n{\n  return __putc_unlocked_body (__c, stdout);\n}\n# endif\t/* POSIX */\n\n\n# ifdef\t__USE_GNU\n/* Like `getdelim', but reads up to a newline.  */\n__STDIO_INLINE __ssize_t\ngetline (char **__lineptr, size_t *__n, FILE *__stream)\n{\n  return __getdelim (__lineptr, __n, '\\n', __stream);\n}\n# endif /* GNU */\n\n\n# ifdef __USE_MISC\n/* Faster versions when locking is not required.  */\n__STDIO_INLINE int\n__NTH (feof_unlocked (FILE *__stream))\n{\n  return __feof_unlocked_body (__stream);\n}\n\n/* Faster versions when locking is not required.  */\n__STDIO_INLINE int\n__NTH (ferror_unlocked (FILE *__stream))\n{\n  return __ferror_unlocked_body (__stream);\n}\n# endif /* misc */\n\n#endif /* Use extern inlines.  */\n\n\n#if defined __USE_MISC && defined __GNUC__ && defined __OPTIMIZE__ \\\n    && !defined __cplusplus\n/* Perform some simple optimizations.  */\n# define fread_unlocked(ptr, size, n, stream) \\\n  (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n)    \\\n\t\t   && (size_t) (size) * (size_t) (n) <= 8\t\t      \\\n\t\t   && (size_t) (size) != 0)\t\t\t\t      \\\n\t\t  ? ({ char *__ptr = (char *) (ptr);\t\t\t      \\\n\t\t       FILE *__stream = (stream);\t\t\t      \\\n\t\t       size_t __cnt;\t\t\t\t\t      \\\n\t\t       for (__cnt = (size_t) (size) * (size_t) (n);\t      \\\n\t\t\t    __cnt > 0; --__cnt)\t\t\t\t      \\\n\t\t\t {\t\t\t\t\t\t      \\\n\t\t\t   int __c = getc_unlocked (__stream);\t\t      \\\n\t\t\t   if (__c == EOF)\t\t\t\t      \\\n\t\t\t     break;\t\t\t\t\t      \\\n\t\t\t   *__ptr++ = __c;\t\t\t\t      \\\n\t\t\t }\t\t\t\t\t\t      \\\n\t\t       ((size_t) (size) * (size_t) (n) - __cnt)\t\t      \\\n\t\t\t/ (size_t) (size); })\t\t\t\t      \\\n\t\t  : (((__builtin_constant_p (size) && (size_t) (size) == 0)   \\\n\t\t      || (__builtin_constant_p (n) && (size_t) (n) == 0))     \\\n\t\t\t/* Evaluate all parameters once.  */\t\t      \\\n\t\t     ? ((void) (ptr), (void) (stream), (void) (size),\t      \\\n\t\t\t(void) (n), (size_t) 0)\t\t\t\t      \\\n\t\t     : fread_unlocked (ptr, size, n, stream))))\n\n# define fwrite_unlocked(ptr, size, n, stream) \\\n  (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n)    \\\n\t\t   && (size_t) (size) * (size_t) (n) <= 8\t\t      \\\n\t\t   && (size_t) (size) != 0)\t\t\t\t      \\\n\t\t  ? ({ const char *__ptr = (const char *) (ptr);\t      \\\n\t\t       FILE *__stream = (stream);\t\t\t      \\\n\t\t       size_t __cnt;\t\t\t\t\t      \\\n\t\t       for (__cnt = (size_t) (size) * (size_t) (n);\t      \\\n\t\t\t    __cnt > 0; --__cnt)\t\t\t\t      \\\n\t\t\t if (putc_unlocked (*__ptr++, __stream) == EOF)\t      \\\n\t\t\t   break;\t\t\t\t\t      \\\n\t\t       ((size_t) (size) * (size_t) (n) - __cnt)\t\t      \\\n\t\t\t/ (size_t) (size); })\t\t\t\t      \\\n\t\t  : (((__builtin_constant_p (size) && (size_t) (size) == 0)   \\\n\t\t      || (__builtin_constant_p (n) && (size_t) (n) == 0))     \\\n\t\t\t/* Evaluate all parameters once.  */\t\t      \\\n\t\t     ? ((void) (ptr), (void) (stream), (void) (size),\t      \\\n\t\t\t(void) (n), (size_t) 0)\t\t\t\t      \\\n\t\t     : fwrite_unlocked (ptr, size, n, stream))))\n#endif\n\n/* Define helper macro.  */\n#undef __STDIO_INLINE\n\n#endif /* bits/stdio.h.  */\n", 5584, 0) = 5584
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/stdlib.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/c++/9/stdlib.h", 4096) = 27
fstat(3, {st_mode=S_IFREG|0644, st_size=2248, ...}) = 0
pread64(3, "// -*- C++ -*- compatibility header.\n\n// Copyright (C) 2002-2019 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file stdlib.h\n *  This is a Standard C++ Library header.\n */\n\n#if !defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n# include_next <stdlib.h>\n#else\n\n#ifndef _GLIBCXX_STDLIB_H\n#define _GLIBCXX_STDLIB_H 1\n\n# include <cstdlib>\n\nusing std::abort;\nusing std::atexit;\nusing std::exit;\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n  using std::at_quick_exit;\n# endif\n# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n  using std::quick_exit;\n# endif\n#endif\n\n#if _GLIBCXX_HOSTED\nusing std::div_t;\nusing std::ldiv_t;\n\nusing std::abs;\nusing std::atof;\nusing std::atoi;\nusing std::atol;\nusing std::bsearch;\nusing std::calloc;\nusing std::div;\nusing std::free;\nusing std::getenv;\nusing std::labs;\nusing std::ldiv;\nusing std::malloc;\n#ifdef _GLIBCXX_HAVE_MBSTATE_T\nusing std::mblen;\nusing std::mbstowcs;\nusing std::mbtowc;\n#endif // _GLIBCXX_HAVE_MBSTATE_T\nusing std::qsort;\nusing std::rand;\nusing std::realloc;\nusing std::srand;\nusing std::strtod;\nusing std::strtol;\nusing std::strtoul;\nusing std::system;\n#ifdef _GLIBCXX_USE_WCHAR_T\nusing std::wcstombs;\nusing std::wctomb;\n#endif // _GLIBCXX_USE_WCHAR_T\n#endif\n\n#endif // _GLIBCXX_STDLIB_H\n#endif // __cplusplus\n", 2248, 0) = 2248
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cstdlib", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/c++/9/cstdlib", 4096) = 26
fstat(3, {st_mode=S_IFREG|0644, st_size=6325, ...}) = 0
pread64(3, "// -*- C++ -*- forwarding header.\n\n// Copyright (C) 1997-2019 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file include/cstdlib\n *  This is a Standard C++ Library file.  You should @c \\#include this file\n *  in your programs, rather than any of the @a *.h implementation files.\n *\n *  This is the C++ version of the Standard C Library header @c stdlib.h,\n *  and its contents are (mostly) the same as that header, but are all\n *  contained in the namespace @c std (except for names which are defined\n *  as macros in C).\n */\n\n//\n// ISO C++ 14882: 20.4.6  C library\n//\n\n#pragma GCC system_header\n\n#include <bits/c++config.h>\n\n#ifndef _GLIBCXX_CSTDLIB\n#define _GLIBCXX_CSTDLIB 1\n\n#if !_GLIBCXX_HOSTED\n// The C standard does not require a freestanding implementation to\n// provide <stdlib.h>.  However, the C++ standard does still require\n// <cstdlib> -- but only the functionality mentioned in\n// [lib.support.start.term].\n\n#define EXIT_SUCCESS 0\n#define EXIT_FAILURE 1\n\nnamespace std\n{\n  extern \"C\" void abort(void) throw () _GLIBCXX_NORETURN;\n  extern \"C\" int atexit(void (*)(void)) throw ();\n  extern \"C\" void exit(int) throw () _GLIBCXX_NORETURN;\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n  extern \"C\" int at_quick_exit(void (*)(void)) throw ();\n# endif\n# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n  extern \"C\" void quick_exit(int) throw() _GLIBCXX_NORETURN;\n# endif\n#endif\n} // namespace std\n\n#else\n\n// Need to ensure this finds the C library's <stdlib.h> not a libstdc++\n// wrapper that might already be installed later in the include search path.\n#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n#include_next <stdlib.h>\n#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n#include <bits/std_abs.h>\n\n// Get rid of those macros defined in <stdlib.h> in lieu of real functions.\n#undef abort\n#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n# undef aligned_alloc\n#endif\n#undef atexit\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n#  undef at_quick_exit\n# endif\n#endif\n#undef atof\n#undef atoi\n#undef atol\n#undef bsearch\n#undef calloc\n#undef div\n#undef exit\n#undef free\n#undef getenv\n#undef labs\n#undef ldiv\n#undef malloc\n#undef mblen\n#undef mbstowcs\n#undef mbtowc\n#undef qsort\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n#  undef quick_exit\n# endif\n#endif\n#undef rand\n#undef realloc\n#undef srand\n#undef strtod\n#undef strtol\n#undef strtoul\n#undef system\n#undef wcstombs\n#undef wctomb\n\nextern \"C++\"\n{\nnamespace std _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n  using ::div_t;\n  using ::ldiv_t;\n\n  using ::abort;\n#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n  using ::aligned_alloc;\n#endif\n  using ::atexit;\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n  using ::at_quick_exit;\n# endif\n#endif\n  using ::atof;\n  using ::atoi;\n  using ::atol;\n  using ::bsearch;\n  using ::calloc;\n  using ::div;\n  using ::exit;\n  using ::free;\n  using ::getenv;\n  using ::labs;\n  using ::ldiv;\n  using ::malloc;\n#ifdef _GLIBCXX_HAVE_MBSTATE_T\n  using ::mblen;\n  using ::mbstowcs;\n  using ::mbtowc;\n#endif // _GLIBCXX_HAVE_MBSTATE_T\n  using ::qsort;\n#if __cplusplus >= 201103L\n# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n  using ::quick_exit;\n# endif\n#endif\n  using ::rand;\n  using ::realloc;\n  using ::srand;\n  using ::strtod;\n  using ::strtol;\n  using ::strtoul;\n  using ::system;\n#ifdef _GLIBCXX_USE_WCHAR_T\n  using ::wcstombs;\n  using ::wctomb;\n#endif // _GLIBCXX_USE_WCHAR_T\n\n#ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO\n  inline ldiv_t\n  div(long __i, long __j) { return ldiv(__i, __j); }\n#endif\n\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace\n\n#if _GLIBCXX_USE_C99_STDLIB\n\n#undef _Exit\n#undef llabs\n#undef lldiv\n#undef atoll\n#undef strtoll\n#undef strtoull\n#undef strtof\n#undef strtold\n\nnamespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  using ::lldiv_t;\n#endif\n#if _GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC\n  extern \"C\" void (_Exit)(int) throw () _GLIBCXX_NORETURN;\n#endif\n#if !_GLIBCXX_USE_C99_DYNAMIC\n  using ::_Exit;\n#endif\n\n#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  using ::llabs;\n\n  inline lldiv_t\n  div(long long __n, long long __d)\n  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n\n  using ::lldiv;\n#endif\n\n#if _GLIBCXX_USE_C99_LONG_LONG_CHECK || _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  extern \"C\" long long int (atoll)(const char *) throw ();\n  extern \"C\" long long int\n    (strtoll)(const char * __restrict, char ** __restrict, int) throw ();\n  extern \"C\" unsigned long long int\n    (strtoull)(const char * __restrict, char ** __restrict, int) throw ();\n#endif\n#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  using ::atoll;\n  using ::strtoll;\n  using ::strtoull;\n#endif\n  using ::strtof;\n  using ::strtold;\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace __gnu_cxx\n\nnamespace std\n{\n#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  using ::__gnu_cxx::lldiv_t;\n#endif\n  using ::__gnu_cxx::_Exit;\n#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n  using ::__gnu_cxx::llabs;\n  using ::__gnu_cxx::div;\n  using ::__gnu_cxx::lldiv;\n#endif\n  using ::__gnu_cxx::atoll;\n  using ::__gnu_cxx::strtof;\n  using ::__gnu_cxx::strtoll;\n  using ::__gnu_cxx::strtoull;\n  using ::__gnu_cxx::strtold;\n} // namespace std\n\n#endif // _GLIBCXX_USE_C99_STDLIB\n\n} // extern \"C++\"\n\n#endif // !_GLIBCXX_HOSTED\n\n#endif\n", 6325, 0) = 6325
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/c++config.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h", 4096) = 52
fstat(3, {st_mode=S_IFREG|0644, st_size=61637, ...}) = 0
mmap(NULL, 61637, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e01a56000
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/os_defines.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/os_defines.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/c++/9/bits/os_defines.h", 4096) = 53
fstat(3, {st_mode=S_IFREG|0644, st_size=2007, ...}) = 0
pread64(3, "// Specific definitions for GNU/Linux  -*- C++ -*-\n\n// Copyright (C) 2000-2019 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/os_defines.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{iosfwd}\n */\n\n#ifndef _GLIBCXX_OS_DEFINES\n#define _GLIBCXX_OS_DEFINES 1\n\n// System-specific #define, typedefs, corrections, etc, go here.  This\n// file will come before all others.\n\n// This keeps isanum, et al from being propagated as macros.\n#define __NO_CTYPE 1\n\n#include <features.h>\n\n// Provide a declaration for the possibly deprecated gets function, as\n// glibc 2.15 and later does not declare gets for ISO C11 when\n// __GNU_SOURCE is defined.\n#if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)\n# undef _GLIBCXX_HAVE_GETS\n#endif\n\n// Glibc 2.23 removed the obsolete isinf and isnan declarations. Check the\n// version dynamically in case it has changed since libstdc++ was configured.\n#define _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC __GLIBC_PREREQ(2,23)\n\n#endif\n", 2007, 0) = 2007
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpu_defines.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/cpu_defines.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/c++/9/bits/cpu_defines.h", 4096) = 54
fstat(3, {st_mode=S_IFREG|0644, st_size=1333, ...}) = 0
pread64(3, "// Specific definitions for generic platforms  -*- C++ -*-\n\n// Copyright (C) 2005-2019 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/cpu_defines.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{iosfwd}\n */\n\n#ifndef _GLIBCXX_CPU_DEFINES\n#define _GLIBCXX_CPU_DEFINES 1\n\n#endif\n", 1333, 0) = 1333
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x153f000)                          = 0x153f000
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/stdlib.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/stdlib.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/stdlib.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdlib.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/stdlib.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/stdlib.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/stdlib.h", 4096) = 21
fstat(3, {st_mode=S_IFREG|0644, st_size=35835, ...}) = 0
mmap(NULL, 35835, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f7e01a4d000
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/waitflags.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/waitflags.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/waitflags.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/waitflags.h", 4096) = 46
fstat(3, {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
pread64(3, "/* Definitions of flag bits for `waitpid' et al.\n   Copyright (C) 1992-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#if !defined _SYS_WAIT_H && !defined _STDLIB_H\n# error \"Never include <bits/waitflags.h> directly; use <sys/wait.h> instead.\"\n#endif\n\n\n/* Bits in the third argument to `waitpid'.  */\n#define\tWNOHANG\t\t1\t/* Don't block waiting.  */\n#define\tWUNTRACED\t2\t/* Report status of stopped children.  */\n\n/* Bits in the fourth argument to `waitid'.  */\n#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8\n# define WSTOPPED\t2\t/* Report stopped child (same as WUNTRACED). */\n# define WEXITED\t4\t/* Report dead child.  */\n# define WCONTINUED\t8\t/* Report continued child.  */\n# define WNOWAIT\t0x01000000 /* Don't reap, just poll status.  */\n#endif\n\n#define __WNOTHREAD     0x20000000 /* Don't wait on children of other threads\n\t\t\t\t      in this group */\n#define __WALL\t\t0x40000000 /* Wait for any child.  */\n#define __WCLONE\t0x80000000 /* Wait for cloned process.  */\n\n/* The following values are used by the `waitid' function.  */\n#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8\n# ifndef __ENUM_IDTYPE_T\n# define __ENUM_IDTYPE_T 1\n\n/* The Linux kernel defines these bare, rather than an enum,\n   which causes a conflict if the include order is reversed. */\n# undef P_ALL\n# undef P_PID\n# undef P_PGID\n\ntypedef enum\n{\n  P_ALL,\t\t/* Wait for any child.  */\n  P_PID,\t\t/* Wait for specified process.  */\n  P_PGID\t\t/* Wait for members of process group.  */\n} idtype_t;\n# endif\n#endif\n", 2218, 0) = 2218
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/waitstatus.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/waitstatus.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/waitstatus.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/waitstatus.h", 4096) = 47
fstat(3, {st_mode=S_IFREG|0644, st_size=2287, ...}) = 0
pread64(3, "/* Definitions of status bits for `wait' et al.\n   Copyright (C) 1992-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#if !defined _SYS_WAIT_H && !defined _STDLIB_H\n# error \"Never include <bits/waitstatus.h> directly; use <sys/wait.h> instead.\"\n#endif\n\n\n/* Everything extant so far uses these same bits.  */\n\n\n/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */\n#define\t__WEXITSTATUS(status)\t(((status) & 0xff00) >> 8)\n\n/* If WIFSIGNALED(STATUS), the terminating signal.  */\n#define\t__WTERMSIG(status)\t((status) & 0x7f)\n\n/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */\n#define\t__WSTOPSIG(status)\t__WEXITSTATUS(status)\n\n/* Nonzero if STATUS indicates normal termination.  */\n#define\t__WIFEXITED(status)\t(__WTERMSIG(status) == 0)\n\n/* Nonzero if STATUS indicates termination by a signal.  */\n#define __WIFSIGNALED(status) \\\n  (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)\n\n/* Nonzero if STATUS indicates the child is stopped.  */\n#define\t__WIFSTOPPED(status)\t(((status) & 0xff) == 0x7f)\n\n/* Nonzero if STATUS indicates the child continued after a stop.  We only\n   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */\n#ifdef WCONTINUED\n# define __WIFCONTINUED(status)\t((status) == __W_CONTINUED)\n#endif\n\n/* Nonzero if STATUS indicates the child dumped core.  */\n#define\t__WCOREDUMP(status)\t((status) & __WCOREFLAG)\n\n/* Macros for constructing status values.  */\n#define\t__W_EXITCODE(ret, sig)\t((ret) << 8 | (sig))\n#define\t__W_STOPCODE(sig)\t((sig) << 8 | 0x7f)\n#define __W_CONTINUED\t\t0xffff\n#define\t__WCOREFLAG\t\t0x80\n", 2287, 0) = 2287
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/floatn.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/floatn.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/floatn.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/floatn.h", 4096) = 43
fstat(3, {st_mode=S_IFREG|0644, st_size=4405, ...}) = 0
pread64(3, "/* Macros to control TS 18661-3 glibc features on x86.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_FLOATN_H\n#define _BITS_FLOATN_H\n\n#include <features.h>\n\n/* Defined to 1 if the current compiler invocation provides a\n   floating-point type with the IEEE 754 binary128 format, and this\n   glibc includes corresponding *f128 interfaces for it.  The required\n   libgcc support was added some time after the basic compiler\n   support, for x86_64 and x86.  */\n#if (defined __x86_64__\t\t\t\t\t\t\t\\\n     ? __GNUC_PREREQ (4, 3)\t\t\t\t\t\t\\\n     : (defined __GNU__ ? __GNUC_PREREQ (4, 5) : __GNUC_PREREQ (4, 4))) \\\n     &&  !defined(__CUDACC__)\n# define __HAVE_FLOAT128 1\n#else\n# define __HAVE_FLOAT128 0\n#endif\n\n/* Defined to 1 if __HAVE_FLOAT128 is 1 and the type is ABI-distinct\n   from the default float, double and long double types in this glibc.  */\n#if __HAVE_FLOAT128\n# define __HAVE_DISTINCT_FLOAT128 1\n#else\n# define __HAVE_DISTINCT_FLOAT128 0\n#endif\n\n/* Defined to 1 if the current compiler invocation provides a\n   floating-point type with the right format for _Float64x, and this\n   glibc includes corresponding *f64x interfaces for it.  */\n#define __HAVE_FLOAT64X 1\n\n/* Defined to 1 if __HAVE_FLOAT64X is 1 and _Float64x has the format\n   of long double.  Otherwise, if __HAVE_FLOAT64X is 1, _Float64x has\n   the format of _Float128, which must be different from that of long\n   double.  */\n#define __HAVE_FLOAT64X_LONG_DOUBLE 1\n\n#ifndef __ASSEMBLER__\n\n/* Defined to concatenate the literal suffix to be used with _Float128\n   types, if __HAVE_FLOAT128 is 1. */\n# if __HAVE_FLOAT128\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n/* The literal suffix f128 exists only since GCC 7.0.  */\n#   define __f128(x) x##q\n#  else\n#   define __f128(x) x##f128\n#  endif\n# endif\n\n/* Defined to a complex binary128 type if __HAVE_FLOAT128 is 1.  */\n# if __HAVE_FLOAT128\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n/* Add a typedef for older GCC compilers which don't natively support\n   _Complex _Float128.  */\ntypedef _Complex float __cfloat128 __attribute__ ((__mode__ (__TC__)));\n#   define __CFLOAT128 __cfloat128\n#  else\n#   define __CFLOAT128 _Complex _Float128\n#  endif\n# endif\n\n/* The remaining of this file provides support for older compilers.  */\n# if __HAVE_FLOAT128\n\n/* The type _Float128 exists only since GCC 7.0.  */\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef __float128 _Float128;\n#  endif\n\n/* __builtin_huge_valf128 doesn't exist before GCC 7.0.  */\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_huge_valf128() ((_Float128) __builtin_huge_val ())\n#  endif\n\n/* Older GCC has only a subset of built-in functions for _Float128 on\n   x86, and __builtin_infq is not usable in static initializers.\n   Converting a narrower sNaN to _Float128 produces a quiet NaN, so\n   attempts to use _Float128 sNaNs will not work properly with older\n   compilers.  */\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_copysignf128 __builtin_copysignq\n#   define __builtin_fabsf128 __builtin_fabsq\n#   define __builtin_inff128() ((_Float128) __builtin_inf ())\n#   define __builtin_nanf128(x) ((_Float128) __builtin_nan (x))\n#   define __builtin_nansf128(x) ((_Float128) __builtin_nans (x))\n#  endif\n\n/* In math/math.h, __MATH_TG will expand signbit to __builtin_signbit*,\n   e.g.: __builtin_signbitf128, before GCC 6.  However, there has never\n   been a __builtin_signbitf128 in GCC and the type-generic builtin is\n   only available since GCC 6.  */\n#  if !__GNUC_PREREQ (6, 0)\n#   define __builtin_signbitf128 __signbitf128\n#  endif\n\n# endif\n\n#endif /* !__ASSEMBLER__.  */\n\n#include <bits/floatn-common.h>\n\n#endif /* _BITS_FLOATN_H */\n", 4405, 0) = 4405
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/floatn-common.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/floatn-common.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/floatn-common.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/floatn-common.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=9765, ...}) = 0
pread64(3, "/* Macros to control TS 18661-3 glibc features where the same\n   definitions are appropriate for all platforms.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_FLOATN_COMMON_H\n#define _BITS_FLOATN_COMMON_H\n\n#include <features.h>\n#include <bits/long-double.h>\n\n/* This header should be included at the bottom of each bits/floatn.h.\n   It defines the following macros for each _FloatN and _FloatNx type,\n   where the same definitions, or definitions based only on the macros\n   in bits/floatn.h, are appropriate for all glibc configurations.  */\n\n/* Defined to 1 if the current compiler invocation provides a\n   floating-point type with the right format for this type, and this\n   glibc includes corresponding *fN or *fNx interfaces for it.  */\n#define __HAVE_FLOAT16 0\n#define __HAVE_FLOAT32 1\n#define __HAVE_FLOAT64 1\n#define __HAVE_FLOAT32X 1\n#define __HAVE_FLOAT128X 0\n\n/* Defined to 1 if the corresponding __HAVE_<type> macro is 1 and the\n   type is the first with its format in the sequence of (the default\n   choices for) float, double, long double, _Float16, _Float32,\n   _Float64, _Float128, _Float32x, _Float64x, _Float128x for this\n   glibc; that is, if functions present once per floating-point format\n   rather than once per type are present for this type.\n\n   All configurations supported by glibc have _Float32 the same format\n   as float, _Float64 and _Float32x the same format as double, the\n   _Float64x the same format as either long double or _Float128.  No\n   configurations support _Float128x or, as of GCC 7, have compiler\n   support for a type meeting the requirements for _Float128x.  */\n#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16\n#define __HAVE_DISTINCT_FLOAT32 0\n#define __HAVE_DISTINCT_FLOAT64 0\n#define __HAVE_DISTINCT_FLOAT32X 0\n#define __HAVE_DISTINCT_FLOAT64X 0\n#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X\n\n/* Defined to 1 if the corresponding _FloatN type is not binary compatible\n   with the corresponding ISO C type in the current compilation unit as\n   opposed to __HAVE_DISTINCT_FLOATN, which indicates the default types built\n   in glibc.  */\n#define __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128\t\\\n\t\t\t\t     && __LDBL_MANT_DIG__ != 113)\n\n/* Defined to 1 if any _FloatN or _FloatNx types that are not\n   ABI-distinct are however distinct types at the C language level (so\n   for the purposes of __builtin_types_compatible_p and _Generic).  */\n#if __GNUC_PREREQ (7, 0) && !defined __cplusplus\n# define __HAVE_FLOATN_NOT_TYPEDEF 1\n#else\n# define __HAVE_FLOATN_NOT_TYPEDEF 0\n#endif\n\n#ifndef __ASSEMBLER__\n\n/* Defined to concatenate the literal suffix to be used with _FloatN\n   or _FloatNx types, if __HAVE_<type> is 1.  The corresponding\n   literal suffixes exist since GCC 7, for C only.  */\n# if __HAVE_FLOAT16\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n/* No corresponding suffix available for this type.  */\n#   define __f16(x) ((_Float16) x##f)\n#  else\n#   define __f16(x) x##f16\n#  endif\n# endif\n\n# if __HAVE_FLOAT32\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   define __f32(x) x##f\n#  else\n#   define __f32(x) x##f32\n#  endif\n# endif\n\n# if __HAVE_FLOAT64\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   ifdef __NO_LONG_DOUBLE_MATH\n#    define __f64(x) x##l\n#   else\n#    define __f64(x) x\n#   endif\n#  else\n#   define __f64(x) x##f64\n#  endif\n# endif\n\n# if __HAVE_FLOAT32X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   define __f32x(x) x\n#  else\n#   define __f32x(x) x##f32x\n#  endif\n# endif\n\n# if __HAVE_FLOAT64X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   if __HAVE_FLOAT64X_LONG_DOUBLE\n#    define __f64x(x) x##l\n#   else\n#    define __f64x(x) __f128 (x)\n#   endif\n#  else\n#   define __f64x(x) x##f64x\n#  endif\n# endif\n\n# if __HAVE_FLOAT128X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   error \"_Float128X supported but no constant suffix\"\n#  else\n#   define __f128x(x) x##f128x\n#  endif\n# endif\n\n/* Defined to a complex type if __HAVE_<type> is 1.  */\n# if __HAVE_FLOAT16\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef _Complex float __cfloat16 __attribute__ ((__mode__ (__HC__)));\n#   define __CFLOAT16 __cfloat16\n#  else\n#   define __CFLOAT16 _Complex _Float16\n#  endif\n# endif\n\n# if __HAVE_FLOAT32\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   define __CFLOAT32 _Complex float\n#  else\n#   define __CFLOAT32 _Complex _Float32\n#  endif\n# endif\n\n# if __HAVE_FLOAT64\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   ifdef __NO_LONG_DOUBLE_MATH\n#    define __CFLOAT64 _Complex long double\n#   else\n#    define __CFLOAT64 _Complex double\n#   endif\n#  else\n#   define __CFLOAT64 _Complex _Float64\n#  endif\n# endif\n\n# if __HAVE_FLOAT32X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   define __CFLOAT32X _Complex double\n#  else\n#   define __CFLOAT32X _Complex _Float32x\n#  endif\n# endif\n\n# if __HAVE_FLOAT64X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   if __HAVE_FLOAT64X_LONG_DOUBLE\n#    define __CFLOAT64X _Complex long double\n#   else\n#    define __CFLOAT64X __CFLOAT128\n#   endif\n#  else\n#   define __CFLOAT64X _Complex _Float64x\n#  endif\n# endif\n\n# if __HAVE_FLOAT128X\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   error \"_Float128X supported but no complex type\"\n#  else\n#   define __CFLOAT128X _Complex _Float128x\n#  endif\n# endif\n\n/* The remaining of this file provides support for older compilers.  */\n# if __HAVE_FLOAT16\n\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef float _Float16 __attribute__ ((__mode__ (__HF__)));\n#  endif\n\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_huge_valf16() ((_Float16) __builtin_huge_val ())\n#   define __builtin_inff16() ((_Float16) __builtin_inf ())\n#   define __builtin_nanf16(x) ((_Float16) __builtin_nan (x))\n#   define __builtin_nansf16(x) ((_Float16) __builtin_nans (x))\n#  endif\n\n# endif\n\n# if __HAVE_FLOAT32\n\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef float _Float32;\n#  endif\n\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_huge_valf32() (__builtin_huge_valf ())\n#   define __builtin_inff32() (__builtin_inff ())\n#   define __builtin_nanf32(x) (__builtin_nanf (x))\n#   define __builtin_nansf32(x) (__builtin_nansf (x))\n#  endif\n\n# endif\n\n# if __HAVE_FLOAT64\n\n/* If double, long double and _Float64 all have the same set of\n   values, TS 18661-3 requires the usual arithmetic conversions on\n   long double and _Float64 to produce _Float64.  For this to be the\n   case when building with a compiler without a distinct _Float64\n   type, _Float64 must be a typedef for long double, not for\n   double.  */\n\n#  ifdef __NO_LONG_DOUBLE_MATH\n\n#   if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef long double _Float64;\n#   endif\n\n#   if !__GNUC_PREREQ (7, 0)\n#    define __builtin_huge_valf64() (__builtin_huge_vall ())\n#    define __builtin_inff64() (__builtin_infl ())\n#    define __builtin_nanf64(x) (__builtin_nanl (x))\n#    define __builtin_nansf64(x) (__builtin_nansl (x))\n#   endif\n\n#  else\n\n#   if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef double _Float64;\n#   endif\n\n#   if !__GNUC_PREREQ (7, 0)\n#    define __builtin_huge_valf64() (__builtin_huge_val ())\n#    define __builtin_inff64() (__builtin_inf ())\n#    define __builtin_nanf64(x) (__builtin_nan (x))\n#    define __builtin_nansf64(x) (__builtin_nans (x))\n#   endif\n\n#  endif\n\n# endif\n\n# if __HAVE_FLOAT32X\n\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef double _Float32x;\n#  endif\n\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_huge_valf32x() (__builtin_huge_val ())\n#   define __builtin_inff32x() (__builtin_inf ())\n#   define __builtin_nanf32x(x) (__builtin_nan (x))\n#   define __builtin_nansf32x(x) (__builtin_nans (x))\n#  endif\n\n# endif\n\n# if __HAVE_FLOAT64X\n\n#  if __HAVE_FLOAT64X_LONG_DOUBLE\n\n#   if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef long double _Float64x;\n#   endif\n\n#   if !__GNUC_PREREQ (7, 0)\n#    define __builtin_huge_valf64x() (__builtin_huge_vall ())\n#    define __builtin_inff64x() (__builtin_infl ())\n#    define __builtin_nanf64x(x) (__builtin_nanl (x))\n#    define __builtin_nansf64x(x) (__builtin_nansl (x))\n#   endif\n\n#  else\n\n#   if !__GNUC_PREREQ (7, 0) || defined __cplusplus\ntypedef _Float128 _Float64x;\n#   endif\n\n#   if !__GNUC_PREREQ (7, 0)\n#    define __builtin_huge_valf64x() (__builtin_huge_valf128 ())\n#    define __builtin_inff64x() (__builtin_inff128 ())\n#    define __builtin_nanf64x(x) (__builtin_nanf128 (x))\n#    define __builtin_nansf64x(x) (__builtin_nansf128 (x))\n#   endif\n\n#  endif\n\n# endif\n\n# if __HAVE_FLOAT128X\n\n#  if !__GNUC_PREREQ (7, 0) || defined __cplusplus\n#   error \"_Float128x supported but no type\"\n#  endif\n\n#  if !__GNUC_PREREQ (7, 0)\n#   define __builtin_huge_valf128x() ((_Float128x) __builtin_huge_val ())\n#   define __builtin_inff128x() ((_Float128x) __builtin_inf ())\n#   define __builtin_nanf128x(x) ((_Float128x) __builtin_nan (x))\n#   define __builtin_nansf128x(x) ((_Float128x) __builtin_nans (x))\n#  endif\n\n# endif\n\n#endif /* !__ASSEMBLER__.  */\n\n#endif /* _BITS_FLOATN_COMMON_H */\n", 9765, 0) = 9765
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x1560000)                          = 0x1560000
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h", 4096) = 51
fstat(3, {st_mode=S_IFREG|0644, st_size=983, ...}) = 0
pread64(3, "/* Definition of locale_t.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_TYPES_LOCALE_T_H\n#define _BITS_TYPES_LOCALE_T_H 1\n\n#include <bits/types/__locale_t.h>\n\ntypedef __locale_t locale_t;\n\n#endif /* bits/types/locale_t.h */\n", 983, 0) = 983
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h", 4096) = 53
fstat(3, {st_mode=S_IFREG|0644, st_size=1722, ...}) = 0
pread64(3, "/* Definition of struct __locale_struct and __locale_t.\n   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_TYPES___LOCALE_T_H\n#define _BITS_TYPES___LOCALE_T_H 1\n\n/* POSIX.1-2008: the locale_t type, representing a locale context\n   (implementation-namespace version).  This type should be treated\n   as opaque by applications; some details are exposed for the sake of\n   efficiency in e.g. ctype functions.  */\n\nstruct __locale_struct\n{\n  /* Note: LC_ALL is not a valid index into this array.  */\n  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */\n\n  /* To increase the speed of this solution we add some special members.  */\n  const unsigned short int *__ctype_b;\n  const int *__ctype_tolower;\n  const int *__ctype_toupper;\n\n  /* Note: LC_ALL is not a valid index into this array.  */\n  const char *__names[13];\n};\n\ntypedef struct __locale_struct *__locale_t;\n\n#endif /* bits/types/__locale_t.h */\n", 1722, 0) = 1722
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/sys/types.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/sys/types.h", 4096) = 41
fstat(3, {st_mode=S_IFREG|0644, st_size=5713, ...}) = 0
pread64(3, "/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/*\n *\tPOSIX Standard: 2.6 Primitive System Data Types\t<sys/types.h>\n */\n\n#ifndef\t_SYS_TYPES_H\n#define\t_SYS_TYPES_H\t1\n\n#include <features.h>\n\n__BEGIN_DECLS\n\n#include <bits/types.h>\n\n#ifdef\t__USE_MISC\n# ifndef __u_char_defined\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n#  define __u_char_defined\n# endif\ntypedef __loff_t loff_t;\n#endif\n\n#ifndef __ino_t_defined\n# ifndef __USE_FILE_OFFSET64\ntypedef __ino_t ino_t;\n# else\ntypedef __ino64_t ino_t;\n# endif\n# define __ino_t_defined\n#endif\n#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined\ntypedef __ino64_t ino64_t;\n# define __ino64_t_defined\n#endif\n\n#ifndef __dev_t_defined\ntypedef __dev_t dev_t;\n# define __dev_t_defined\n#endif\n\n#ifndef __gid_t_defined\ntypedef __gid_t gid_t;\n# define __gid_t_defined\n#endif\n\n#ifndef __mode_t_defined\ntypedef __mode_t mode_t;\n# define __mode_t_defined\n#endif\n\n#ifndef __nlink_t_defined\ntypedef __nlink_t nlink_t;\n# define __nlink_t_defined\n#endif\n\n#ifndef __uid_t_defined\ntypedef __uid_t uid_t;\n# define __uid_t_defined\n#endif\n\n#ifndef __off_t_defined\n# ifndef __USE_FILE_OFFSET64\ntypedef __off_t off_t;\n# else\ntypedef __off64_t off_t;\n# endif\n# define __off_t_defined\n#endif\n#if defined __USE_LARGEFILE64 && !defined __off64_t_defined\ntypedef __off64_t off64_t;\n# define __off64_t_defined\n#endif\n\n#ifndef __pid_t_defined\ntypedef __pid_t pid_t;\n# define __pid_t_defined\n#endif\n\n#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \\\n    && !defined __id_t_defined\ntypedef __id_t id_t;\n# define __id_t_defined\n#endif\n\n#ifndef __ssize_t_defined\ntypedef __ssize_t ssize_t;\n# define __ssize_t_defined\n#endif\n\n#ifdef\t__USE_MISC\n# ifndef __daddr_t_defined\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n#  define __daddr_t_defined\n# endif\n#endif\n\n#if (defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined\ntypedef __key_t key_t;\n# define __key_t_defined\n#endif\n\n#if defined __USE_XOPEN || defined __USE_XOPEN2K8\n# include <bits/types/clock_t.h>\n#endif\n#include <bits/types/clockid_t.h>\n#include <bits/types/time_t.h>\n#include <bits/types/timer_t.h>\n\n#ifdef __USE_XOPEN\n# ifndef __useconds_t_defined\ntypedef __useconds_t useconds_t;\n#  define __useconds_t_defined\n# endif\n# ifndef __suseconds_t_defined\ntypedef __suseconds_t suseconds_t;\n#  define __suseconds_t_defined\n# endif\n#endif\n\n#define\t__need_size_t\n#include <stddef.h>\n\n#ifdef __USE_MISC\n/* Old compatibility names for C types.  */\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n#endif\n\n/* These size-specific names are used by some of the inet code.  */\n\n#include <bits/stdint-intn.h>\n\n/* These were defined by ISO C without the first `_'.  */\ntypedef __uint8_t u_int8_t;\ntypedef __uint16_t u_int16_t;\ntypedef __uint32_t u_int32_t;\ntypedef __uint64_t u_int64_t;\n\n#if __GNUC_PREREQ (2, 7)\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n#else\ntypedef int register_t;\n#endif\n\n/* Some code from BIND tests this macro to see if the types above are\n   defined.  */\n#define __BIT_TYPES_DEFINED__\t1\n\n\n#ifdef\t__USE_MISC\n/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */\n# include <endian.h>\n\n/* It also defines `fd_set' and the FD_* macros for `select'.  */\n# include <sys/select.h>\n#endif /* Use misc.  */\n\n\n#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \\\n    && !defined __blksize_t_defined\ntypedef __blksize_t blksize_t;\n# define __blksize_t_defined\n#endif\n\n/* Types from the Large File Support interface.  */\n#ifndef __USE_FILE_OFFSET64\n# ifndef __blkcnt_t_defined\ntypedef __blkcnt_t blkcnt_t;\t /* Type to count number of disk blocks.  */\n#  define __blkcnt_t_defined\n# endif\n# ifndef __fsblkcnt_t_defined\ntypedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */\n#  define __fsblkcnt_t_defined\n# endif\n# ifndef __fsfilcnt_t_defined\ntypedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */\n#  define __fsfilcnt_t_defined\n# endif\n#else\n# ifndef __blkcnt_t_defined\ntypedef __blkcnt64_t blkcnt_t;\t   /* Type to count number of disk blocks.  */\n#  define __blkcnt_t_defined\n# endif\n# ifndef __fsblkcnt_t_defined\ntypedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */\n#  define __fsblkcnt_t_defined\n# endif\n# ifndef __fsfilcnt_t_defined\ntypedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */\n#  define __fsfilcnt_t_defined\n# endif\n#endif\n\n#ifdef __USE_LARGEFILE64\ntypedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */\ntypedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */\ntypedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */\n#endif\n\n\n/* Now add the thread types.  */\n#if defined __USE_POSIX199506 || defined __USE_UNIX98\n# include <bits/pthreadtypes.h>\n#endif\n\n__END_DECLS\n\n#endif /* sys/types.h */\n", 5713, 0) = 5713
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=143, ...}) = 0
pread64(3, "#ifndef __clock_t_defined\n#define __clock_t_defined 1\n\n#include <bits/types.h>\n\n/* Returned by `clock'.  */\ntypedef __clock_t clock_t;\n\n#endif\n", 143, 0) = 143
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", 4096) = 52
fstat(3, {st_mode=S_IFREG|0644, st_size=174, ...}) = 0
pread64(3, "#ifndef __clockid_t_defined\n#define __clockid_t_defined 1\n\n#include <bits/types.h>\n\n/* Clock ID used in clock and timer functions.  */\ntypedef __clockid_t clockid_t;\n\n#endif\n", 174, 0) = 174
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", 4096) = 49
fstat(3, {st_mode=S_IFREG|0644, st_size=138, ...}) = 0
pread64(3, "#ifndef __time_t_defined\n#define __time_t_defined 1\n\n#include <bits/types.h>\n\n/* Returned by `time'.  */\ntypedef __time_t time_t;\n\n#endif\n", 138, 0) = 138
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=159, ...}) = 0
pread64(3, "#ifndef __timer_t_defined\n#define __timer_t_defined 1\n\n#include <bits/types.h>\n\n/* Timer ID returned by `timer_create'.  */\ntypedef __timer_t timer_t;\n\n#endif\n", 159, 0) = 159
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stdint-intn.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/stdint-intn.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", 4096) = 48
fstat(3, {st_mode=S_IFREG|0644, st_size=1037, ...}) = 0
pread64(3, "/* Define intN_t types.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_STDINT_INTN_H\n#define _BITS_STDINT_INTN_H\t1\n\n#include <bits/types.h>\n\ntypedef __int8_t int8_t;\ntypedef __int16_t int16_t;\ntypedef __int32_t int32_t;\ntypedef __int64_t int64_t;\n\n#endif /* bits/stdint-intn.h */\n", 1037, 0) = 1037
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/endian.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/endian.h", 4096) = 21
fstat(3, {st_mode=S_IFREG|0644, st_size=2299, ...}) = 0
pread64(3, "/* Copyright (C) 1992-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef\t_ENDIAN_H\n#define\t_ENDIAN_H\t1\n\n#include <features.h>\n\n/* Get the definitions of __*_ENDIAN, __BYTE_ORDER, and __FLOAT_WORD_ORDER.  */\n#include <bits/endian.h>\n\n#ifdef __USE_MISC\n# define LITTLE_ENDIAN\t__LITTLE_ENDIAN\n# define BIG_ENDIAN\t__BIG_ENDIAN\n# define PDP_ENDIAN\t__PDP_ENDIAN\n# define BYTE_ORDER\t__BYTE_ORDER\n#endif\n\n#if defined __USE_MISC && !defined __ASSEMBLER__\n/* Conversion interfaces.  */\n# include <bits/byteswap.h>\n# include <bits/uintn-identity.h>\n\n# if __BYTE_ORDER == __LITTLE_ENDIAN\n#  define htobe16(x) __bswap_16 (x)\n#  define htole16(x) __uint16_identity (x)\n#  define be16toh(x) __bswap_16 (x)\n#  define le16toh(x) __uint16_identity (x)\n\n#  define htobe32(x) __bswap_32 (x)\n#  define htole32(x) __uint32_identity (x)\n#  define be32toh(x) __bswap_32 (x)\n#  define le32toh(x) __uint32_identity (x)\n\n#  define htobe64(x) __bswap_64 (x)\n#  define htole64(x) __uint64_identity (x)\n#  define be64toh(x) __bswap_64 (x)\n#  define le64toh(x) __uint64_identity (x)\n\n# else\n#  define htobe16(x) __uint16_identity (x)\n#  define htole16(x) __bswap_16 (x)\n#  define be16toh(x) __uint16_identity (x)\n#  define le16toh(x) __bswap_16 (x)\n\n#  define htobe32(x) __uint32_identity (x)\n#  define htole32(x) __bswap_32 (x)\n#  define be32toh(x) __uint32_identity (x)\n#  define le32toh(x) __bswap_32 (x)\n\n#  define htobe64(x) __uint64_identity (x)\n#  define htole64(x) __bswap_64 (x)\n#  define be64toh(x) __uint64_identity (x)\n#  define le64toh(x) __bswap_64 (x)\n# endif\n#endif\n\n#endif\t/* endian.h */\n", 2299, 0) = 2299
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/endian.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/endian.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/endian.h", 4096) = 43
fstat(3, {st_mode=S_IFREG|0644, st_size=1905, ...}) = 0
pread64(3, "/* Endian macros for string.h functions\n   Copyright (C) 1992-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <http://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_ENDIAN_H\n#define _BITS_ENDIAN_H 1\n\n/* Definitions for byte order, according to significance of bytes,\n   from low addresses to high addresses.  The value is what you get by\n   putting '4' in the most significant byte, '3' in the second most\n   significant byte, '2' in the second least significant byte, and '1'\n   in the least significant byte, and then writing down one digit for\n   each byte, starting with the byte at the lowest address at the left,\n   and proceeding to the byte with the highest address at the right.  */\n\n#define\t__LITTLE_ENDIAN\t1234\n#define\t__BIG_ENDIAN\t4321\n#define\t__PDP_ENDIAN\t3412\n\n/* This file defines `__BYTE_ORDER' for the particular machine.  */\n#include <bits/endianness.h>\n\n/* Some machines may need to use a different endianness for floating point\n   values.  */\n#ifndef __FLOAT_WORD_ORDER\n# define __FLOAT_WORD_ORDER __BYTE_ORDER\n#endif\n\n#if __BYTE_ORDER == __LITTLE_ENDIAN\n# define __LONG_LONG_PAIR(HI, LO) LO, HI\n#elif __BYTE_ORDER == __BIG_ENDIAN\n# define __LONG_LONG_PAIR(HI, LO) HI, LO\n#endif\n\n#endif /* bits/endian.h */\n", 1905, 0) = 1905
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/endianness.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/endianness.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/endianness.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/endianness.h", 4096) = 47
fstat(3, {st_mode=S_IFREG|0644, st_size=273, ...}) = 0
pread64(3, "#ifndef _BITS_ENDIANNESS_H\n#define _BITS_ENDIANNESS_H 1\n\n#ifndef _BITS_ENDIAN_H\n# error \"Never use <bits/endianness.h> directly; include <endian.h> instead.\"\n#endif\n\n/* i386/x86_64 are little-endian.  */\n#define __BYTE_ORDER __LITTLE_ENDIAN\n\n#endif /* bits/endianness.h */\n", 273, 0) = 273
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/byteswap.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/byteswap.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/byteswap.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/byteswap.h", 4096) = 45
fstat(3, {st_mode=S_IFREG|0644, st_size=2450, ...}) = 0
pread64(3, "/* Macros and inline functions to swap the order of bytes in integer values.\n   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#if !defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H\n# error \"Never use <bits/byteswap.h> directly; include <byteswap.h> instead.\"\n#endif\n\n#ifndef _BITS_BYTESWAP_H\n#define _BITS_BYTESWAP_H 1\n\n#include <features.h>\n#include <bits/types.h>\n\n/* Swap bytes in 16-bit value.  */\n#define __bswap_constant_16(x)\t\t\t\t\t\\\n  ((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))\n\nstatic __inline __uint16_t\n__bswap_16 (__uint16_t __bsx)\n{\n#if __GNUC_PREREQ (4, 8)\n  return __builtin_bswap16 (__bsx);\n#else\n  return __bswap_constant_16 (__bsx);\n#endif\n}\n\n/* Swap bytes in 32-bit value.  */\n#define __bswap_constant_32(x)\t\t\t\t\t\\\n  ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8)\t\\\n   | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))\n\nstatic __inline __uint32_t\n__bswap_32 (__uint32_t __bsx)\n{\n#if __GNUC_PREREQ (4, 3)\n  return __builtin_bswap32 (__bsx);\n#else\n  return __bswap_constant_32 (__bsx);\n#endif\n}\n\n/* Swap bytes in 64-bit value.  */\n#define __bswap_constant_64(x)\t\t\t\\\n  ((((x) & 0xff00000000000000ull) >> 56)\t\\\n   | (((x) & 0x00ff000000000000ull) >> 40)\t\\\n   | (((x) & 0x0000ff0000000000ull) >> 24)\t\\\n   | (((x) & 0x000000ff00000000ull) >> 8)\t\\\n   | (((x) & 0x00000000ff000000ull) << 8)\t\\\n   | (((x) & 0x0000000000ff0000ull) << 24)\t\\\n   | (((x) & 0x000000000000ff00ull) << 40)\t\\\n   | (((x) & 0x00000000000000ffull) << 56))\n\n__extension__ static __inline __uint64_t\n__bswap_64 (__uint64_t __bsx)\n{\n#if __GNUC_PREREQ (4, 3)\n  return __builtin_bswap64 (__bsx);\n#else\n  return __bswap_constant_64 (__bsx);\n#endif\n}\n\n#endif /* _BITS_BYTESWAP_H */\n", 2450, 0) = 2450
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/uintn-identity.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/uintn-identity.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h", 4096) = 51
fstat(3, {st_mode=S_IFREG|0644, st_size=1542, ...}) = 0
pread64(3, "/* Inline functions to return unsigned integer values unchanged.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#if !defined _NETINET_IN_H && !defined _ENDIAN_H\n# error \"Never use <bits/uintn-identity.h> directly; include <netinet/in.h> or <endian.h> instead.\"\n#endif\n\n#ifndef _BITS_UINTN_IDENTITY_H\n#define _BITS_UINTN_IDENTITY_H 1\n\n#include <bits/types.h>\n\n/* These inline functions are to ensure the appropriate type\n   conversions and associated diagnostics from macros that convert to\n   a given endianness.  */\n\nstatic __inline __uint16_t\n__uint16_identity (__uint16_t __x)\n{\n  return __x;\n}\n\nstatic __inline __uint32_t\n__uint32_identity (__uint32_t __x)\n{\n  return __x;\n}\n\nstatic __inline __uint64_t\n__uint64_identity (__uint64_t __x)\n{\n  return __x;\n}\n\n#endif /* _BITS_UINTN_IDENTITY_H.  */\n", 1542, 0) = 1542
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x1581000)                          = 0x1581000
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/sys/select.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/sys/select.h", 4096) = 42
fstat(3, {st_mode=S_IFREG|0644, st_size=4141, ...}) = 0
pread64(3, "/* `fd_set' type and related macros, and `select'/`pselect' declarations.\n   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/*\tPOSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */\n\n#ifndef _SYS_SELECT_H\n#define _SYS_SELECT_H\t1\n\n#include <features.h>\n\n/* Get definition of needed basic types.  */\n#include <bits/types.h>\n\n/* Get __FD_* definitions.  */\n#include <bits/select.h>\n\n/* Get sigset_t.  */\n#include <bits/types/sigset_t.h>\n\n/* Get definition of timer specification structures.  */\n#include <bits/types/time_t.h>\n#include <bits/types/struct_timeval.h>\n#ifdef __USE_XOPEN2K\n# include <bits/types/struct_timespec.h>\n#endif\n\n#ifndef __suseconds_t_defined\ntypedef __suseconds_t suseconds_t;\n# define __suseconds_t_defined\n#endif\n\n\n/* The fd_set member is required to be an array of longs.  */\ntypedef long int __fd_mask;\n\n/* Some versions of <linux/posix_types.h> define this macros.  */\n#undef\t__NFDBITS\n/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */\n#define __NFDBITS\t(8 * (int) sizeof (__fd_mask))\n#define\t__FD_ELT(d)\t((d) / __NFDBITS)\n#define\t__FD_MASK(d)\t((__fd_mask) (1UL << ((d) % __NFDBITS)))\n\n/* fd_set for select and pselect.  */\ntypedef struct\n  {\n    /* XPG4.2 requires this member name.  Otherwise avoid the name\n       from the global namespace.  */\n#ifdef __USE_XOPEN\n    __fd_mask fds_bits[__FD_SETSIZE / __NFDBITS];\n# define __FDS_BITS(set) ((set)->fds_bits)\n#else\n    __fd_mask __fds_bits[__FD_SETSIZE / __NFDBITS];\n# define __FDS_BITS(set) ((set)->__fds_bits)\n#endif\n  } fd_set;\n\n/* Maximum number of file descriptors in `fd_set'.  */\n#define\tFD_SETSIZE\t\t__FD_SETSIZE\n\n#ifdef __USE_MISC\n/* Sometimes the fd_set member is assumed to have this type.  */\ntypedef __fd_mask fd_mask;\n\n/* Number of bits per word of `fd_set' (some code assumes this is 32).  */\n# define NFDBITS\t\t__NFDBITS\n#endif\n\n\n/* Access macros for `fd_set'.  */\n#define\tFD_SET(fd, fdsetp)\t__FD_SET (fd, fdsetp)\n#define\tFD_CLR(fd, fdsetp)\t__FD_CLR (fd, fdsetp)\n#define\tFD_ISSET(fd, fdsetp)\t__FD_ISSET (fd, fdsetp)\n#define\tFD_ZERO(fdsetp)\t\t__FD_ZERO (fdsetp)\n\n\n__BEGIN_DECLS\n\n/* Check the first NFDS descriptors each in READFDS (if not NULL) for read\n   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS\n   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out\n   after waiting the interval specified therein.  Returns the number of ready\n   descriptors, or -1 for errors.\n\n   This function is a cancellation point and therefore not marked with\n   __THROW.  */\nextern int select (int __nfds, fd_set *__restrict __readfds,\n\t\t   fd_set *__restrict __writefds,\n\t\t   fd_set *__restrict __exceptfds,\n\t\t   struct timeval *__restrict __timeout);\n\n#ifdef __USE_XOPEN2K\n/* Same as above only that the TIMEOUT value is given with higher\n   resolution and a sigmask which is been set temporarily.  This version\n   should be used.\n\n   This function is a cancellation point and therefore not marked with\n   __THROW.  */\nextern int pselect (int __nfds, fd_set *__restrict __readfds,\n\t\t    fd_set *__restrict __writefds,\n\t\t    fd_set *__restrict __exceptfds,\n\t\t    const struct timespec *__restrict __timeout,\n\t\t    const __sigset_t *__restrict __sigmask);\n#endif\n\n\n/* Define some inlines helping to catch common problems.  */\n#if __USE_FORTIFY_LEVEL > 0 && defined __GNUC__\n# include <bits/select2.h>\n#endif\n\n__END_DECLS\n\n#endif /* sys/select.h */\n", 4141, 0) = 4141
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/select.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/select.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/select.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/select.h", 4096) = 43
fstat(3, {st_mode=S_IFREG|0644, st_size=2106, ...}) = 0
pread64(3, "/* Copyright (C) 1997-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _SYS_SELECT_H\n# error \"Never use <bits/select.h> directly; include <sys/select.h> instead.\"\n#endif\n\n#include <bits/wordsize.h>\n\n\n#if defined __GNUC__ && __GNUC__ >= 2\n\n# if __WORDSIZE == 64\n#  define __FD_ZERO_STOS \"stosq\"\n# else\n#  define __FD_ZERO_STOS \"stosl\"\n# endif\n\n# define __FD_ZERO(fdsp) \\\n  do {\t\t\t\t\t\t\t\t\t      \\\n    int __d0, __d1;\t\t\t\t\t\t\t      \\\n    __asm__ __volatile__ (\"cld; rep; \" __FD_ZERO_STOS\t\t\t      \\\n\t\t\t  : \"=c\" (__d0), \"=D\" (__d1)\t\t\t      \\\n\t\t\t  : \"a\" (0), \"0\" (sizeof (fd_set)\t\t      \\\n\t\t\t\t\t  / sizeof (__fd_mask)),\t      \\\n\t\t\t    \"1\" (&__FDS_BITS (fdsp)[0])\t\t\t      \\\n\t\t\t  : \"memory\");\t\t\t\t\t      \\\n  } while (0)\n\n#else\t/* ! GNU CC */\n\n/* We don't use `memset' because this would require a prototype and\n   the array isn't too big.  */\n# define __FD_ZERO(set)  \\\n  do {\t\t\t\t\t\t\t\t\t      \\\n    unsigned int __i;\t\t\t\t\t\t\t      \\\n    fd_set *__arr = (set);\t\t\t\t\t\t      \\\n    for (__i = 0; __i < sizeof (fd_set) / sizeof (__fd_mask); ++__i)\t      \\\n      __FDS_BITS (__arr)[__i] = 0;\t\t\t\t\t      \\\n  } while (0)\n\n#endif\t/* GNU CC */\n\n#define __FD_SET(d, set) \\\n  ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))\n#define __FD_CLR(d, set) \\\n  ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))\n#define __FD_ISSET(d, set) \\\n  ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)\n", 2106, 0) = 2106
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", 4096) = 51
fstat(3, {st_mode=S_IFREG|0644, st_size=195, ...}) = 0
pread64(3, "#ifndef __sigset_t_defined\n#define __sigset_t_defined 1\n\n#include <bits/types/__sigset_t.h>\n\n/* A set of signals to be blocked, unblocked, or waited for.  */\ntypedef __sigset_t sigset_t;\n\n#endif\n", 195, 0) = 195
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", 4096) = 53
fstat(3, {st_mode=S_IFREG|0644, st_size=206, ...}) = 0
pread64(3, "#ifndef ____sigset_t_defined\n#define ____sigset_t_defined\n\n#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))\ntypedef struct\n{\n  unsigned long int __val[_SIGSET_NWORDS];\n} __sigset_t;\n\n#endif\n", 206, 0) = 206
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", 4096) = 57
fstat(3, {st_mode=S_IFREG|0644, st_size=287, ...}) = 0
pread64(3, "#ifndef __timeval_defined\n#define __timeval_defined 1\n\n#include <bits/types.h>\n\n/* A time value that is accurate to the nearest\n   microsecond but also has a range of years.  */\nstruct timeval\n{\n  __time_t tv_sec;\t\t/* Seconds.  */\n  __suseconds_t tv_usec;\t/* Microseconds.  */\n};\n#endif\n", 287, 0) = 287
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", 4096) = 58
fstat(3, {st_mode=S_IFREG|0644, st_size=728, ...}) = 0
pread64(3, "/* NB: Include guard matches what <linux/time.h> uses.  */\n#ifndef _STRUCT_TIMESPEC\n#define _STRUCT_TIMESPEC 1\n\n#include <bits/types.h>\n#include <bits/endian.h>\n\n/* POSIX.1b structure for a time value.  This is like a `struct timeval' but\n   has nanoseconds instead of microseconds.  */\nstruct timespec\n{\n  __time_t tv_sec;\t\t/* Seconds.  */\n#if __WORDSIZE == 64 \\\n  || (defined __SYSCALL_WORDSIZE && __SYSCALL_WORDSIZE == 64) \\\n  || __TIMESIZE == 32\n  __syscall_slong_t tv_nsec;\t/* Nanoseconds.  */\n#else\n# if __BYTE_ORDER == __BIG_ENDIAN\n  int: 32;           /* Padding.  */\n  long int tv_nsec;  /* Nanoseconds.  */\n# else\n  long int tv_nsec;  /* Nanoseconds.  */\n  int: 32;           /* Padding.  */\n# endif\n#endif\n};\n\n#endif\n", 728, 0) = 728
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/pthreadtypes.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/pthreadtypes.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", 4096) = 49
fstat(3, {st_mode=S_IFREG|0644, st_size=3072, ...}) = 0
pread64(3, "/* Declaration of common pthread types for all architectures.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_PTHREADTYPES_COMMON_H\n# define _BITS_PTHREADTYPES_COMMON_H\t1\n\n/* For internal mutex and condition variable definitions.  */\n#include <bits/thread-shared-types.h>\n\n/* Thread identifiers.  The structure of the attribute type is not\n   exposed on purpose.  */\ntypedef unsigned long int pthread_t;\n\n\n/* Data structures for mutex handling.  The structure of the attribute\n   type is not exposed on purpose.  */\ntypedef union\n{\n  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];\n  int __align;\n} pthread_mutexattr_t;\n\n\n/* Data structure for condition variable handling.  The structure of\n   the attribute type is not exposed on purpose.  */\ntypedef union\n{\n  char __size[__SIZEOF_PTHREAD_CONDATTR_T];\n  int __align;\n} pthread_condattr_t;\n\n\n/* Keys for thread-specific data */\ntypedef unsigned int pthread_key_t;\n\n\n/* Once-only execution */\ntypedef int __ONCE_ALIGNMENT pthread_once_t;\n\n\nunion pthread_attr_t\n{\n  char __size[__SIZEOF_PTHREAD_ATTR_T];\n  long int __align;\n};\n#ifndef __have_pthread_attr_t\ntypedef union pthread_attr_t pthread_attr_t;\n# define __have_pthread_attr_t 1\n#endif\n\n\ntypedef union\n{\n  struct __pthread_mutex_s __data;\n  char __size[__SIZEOF_PTHREAD_MUTEX_T];\n  long int __align;\n} pthread_mutex_t;\n\n\ntypedef union\n{\n  struct __pthread_cond_s __data;\n  char __size[__SIZEOF_PTHREAD_COND_T];\n  __extension__ long long int __align;\n} pthread_cond_t;\n\n\n#if defined __USE_UNIX98 || defined __USE_XOPEN2K\n/* Data structure for reader-writer lock variable handling.  The\n   structure of the attribute type is deliberately not exposed.  */\ntypedef union\n{\n  struct __pthread_rwlock_arch_t __data;\n  char __size[__SIZEOF_PTHREAD_RWLOCK_T];\n  long int __align;\n} pthread_rwlock_t;\n\ntypedef union\n{\n  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];\n  long int __align;\n} pthread_rwlockattr_t;\n#endif\n\n\n#ifdef __USE_XOPEN2K\n/* POSIX spinlock data type.  */\ntypedef volatile int pthread_spinlock_t;\n\n\n/* POSIX barriers data type.  The structure of the type is\n   deliberately not exposed.  */\ntypedef union\n{\n  char __size[__SIZEOF_PTHREAD_BARRIER_T];\n  long int __align;\n} pthread_barrier_t;\n\ntypedef union\n{\n  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];\n  int __align;\n} pthread_barrierattr_t;\n#endif\n\n#endif\n", 3072, 0) = 3072
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/thread-shared-types.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/thread-shared-types.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", 4096) = 56
fstat(3, {st_mode=S_IFREG|0644, st_size=3982, ...}) = 0
pread64(3, "/* Common threading primitives definitions for both POSIX and C11.\n   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _THREAD_SHARED_TYPES_H\n#define _THREAD_SHARED_TYPES_H 1\n\n/* Arch-specific definitions.  Each architecture must define the following\n   macros to define the expected sizes of pthread data types:\n\n   __SIZEOF_PTHREAD_ATTR_T        - size of pthread_attr_t.\n   __SIZEOF_PTHREAD_MUTEX_T       - size of pthread_mutex_t.\n   __SIZEOF_PTHREAD_MUTEXATTR_T   - size of pthread_mutexattr_t.\n   __SIZEOF_PTHREAD_COND_T        - size of pthread_cond_t.\n   __SIZEOF_PTHREAD_CONDATTR_T    - size of pthread_condattr_t.\n   __SIZEOF_PTHREAD_RWLOCK_T      - size of pthread_rwlock_t.\n   __SIZEOF_PTHREAD_RWLOCKATTR_T  - size of pthread_rwlockattr_t.\n   __SIZEOF_PTHREAD_BARRIER_T     - size of pthread_barrier_t.\n   __SIZEOF_PTHREAD_BARRIERATTR_T - size of pthread_barrierattr_t.\n\n   The additional macro defines any constraint for the lock alignment\n   inside the thread structures:\n\n   __LOCK_ALIGNMENT - for internal lock/futex usage.\n\n   Same idea but for the once locking primitive:\n\n   __ONCE_ALIGNMENT - for pthread_once_t/once_flag definition.  */\n\n#include <bits/pthreadtypes-arch.h>\n\n\n/* Common definition of pthread_mutex_t. */\n\ntypedef struct __pthread_internal_list\n{\n  struct __pthread_internal_list *__prev;\n  struct __pthread_internal_list *__next;\n} __pthread_list_t;\n\ntypedef struct __pthread_internal_slist\n{\n  struct __pthread_internal_slist *__next;\n} __pthread_slist_t;\n\n/* Arch-specific mutex definitions.  A generic implementation is provided\n   by sysdeps/nptl/bits/struct_mutex.h.  If required, an architecture\n   can override it by defining:\n\n   1. struct __pthread_mutex_s (used on both pthread_mutex_t and mtx_t\n      definition).  It should contains at least the internal members\n      defined in the generic version.\n\n   2. __LOCK_ALIGNMENT for any extra attribute for internal lock used with\n      atomic operations.\n\n   3. The macro __PTHREAD_MUTEX_INITIALIZER used for static initialization.\n      It should initialize the mutex internal flag.  */\n\n#include <bits/struct_mutex.h>\n\n/* Arch-sepecific read-write lock definitions.  A generic implementation is\n   provided by struct_rwlock.h.  If required, an architecture can override it\n   by defining:\n\n   1. struct __pthread_rwlock_arch_t (used on pthread_rwlock_t definition).\n      It should contain at least the internal members defined in the\n      generic version.\n\n   2. The macro __PTHREAD_RWLOCK_INITIALIZER used for static initialization.\n      It should initialize the rwlock internal type.  */\n\n#include <bits/struct_rwlock.h>\n\n\n/* Common definition of pthread_cond_t. */\n\nstruct __pthread_cond_s\n{\n  __extension__ union\n  {\n    __extension__ unsigned long long int __wseq;\n    struct\n    {\n      unsigned int __low;\n      unsigned int __high;\n    } __wseq32;\n  };\n  __extension__ union\n  {\n    __extension__ unsigned long long int __g1_start;\n    struct\n    {\n      unsigned int __low;\n      unsigned int __high;\n    } __g1_start32;\n  };\n  unsigned int __g_refs[2] __LOCK_ALIGNMENT;\n  unsigned int __g_size[2];\n  unsigned int __g1_orig_size;\n  unsigned int __wrefs;\n  unsigned int __g_signals[2];\n};\n\n#endif /* _THREAD_SHARED_TYPES_H  */\n", 3982, 0) = 3982
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/pthreadtypes-arch.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/pthreadtypes-arch.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h", 4096) = 54
fstat(3, {st_mode=S_IFREG|0644, st_size=1838, ...}) = 0
pread64(3, "/* Copyright (C) 2002-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_PTHREADTYPES_ARCH_H\n#define _BITS_PTHREADTYPES_ARCH_H\t1\n\n#include <bits/wordsize.h>\n\n#ifdef __x86_64__\n# if __WORDSIZE == 64\n#  define __SIZEOF_PTHREAD_MUTEX_T 40\n#  define __SIZEOF_PTHREAD_ATTR_T 56\n#  define __SIZEOF_PTHREAD_RWLOCK_T 56\n#  define __SIZEOF_PTHREAD_BARRIER_T 32\n# else\n#  define __SIZEOF_PTHREAD_MUTEX_T 32\n#  define __SIZEOF_PTHREAD_ATTR_T 32\n#  define __SIZEOF_PTHREAD_RWLOCK_T 44\n#  define __SIZEOF_PTHREAD_BARRIER_T 20\n# endif\n#else\n# define __SIZEOF_PTHREAD_MUTEX_T 24\n# define __SIZEOF_PTHREAD_ATTR_T 36\n# define __SIZEOF_PTHREAD_RWLOCK_T 32\n# define __SIZEOF_PTHREAD_BARRIER_T 20\n#endif\n#define __SIZEOF_PTHREAD_MUTEXATTR_T 4\n#define __SIZEOF_PTHREAD_COND_T 48\n#define __SIZEOF_PTHREAD_CONDATTR_T 4\n#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8\n#define __SIZEOF_PTHREAD_BARRIERATTR_T 4\n\n#define __LOCK_ALIGNMENT\n#define __ONCE_ALIGNMENT\n\n#ifndef __x86_64__\n/* Extra attributes for the cleanup functions.  */\n# define __cleanup_fct_attribute __attribute__ ((__regparm__ (1)))\n#endif\n\n#endif\t/* bits/pthreadtypes.h */\n", 1838, 0) = 1838
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/struct_mutex.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/struct_mutex.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", 4096) = 49
fstat(3, {st_mode=S_IFREG|0644, st_size=1810, ...}) = 0
pread64(3, "/* x86 internal mutex struct definitions.\n   Copyright (C) 2019-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <http://www.gnu.org/licenses/>.  */\n\n#ifndef _THREAD_MUTEX_INTERNAL_H\n#define _THREAD_MUTEX_INTERNAL_H 1\n\nstruct __pthread_mutex_s\n{\n  int __lock;\n  unsigned int __count;\n  int __owner;\n#ifdef __x86_64__\n  unsigned int __nusers;\n#endif\n  /* KIND must stay at this position in the structure to maintain\n     binary compatibility with static initializers.  */\n  int __kind;\n#ifdef __x86_64__\n  short __spins;\n  short __elision;\n  __pthread_list_t __list;\n# define __PTHREAD_MUTEX_HAVE_PREV      1\n#else\n  unsigned int __nusers;\n  __extension__ union\n  {\n    struct\n    {\n      short __espins;\n      short __eelision;\n# define __spins __elision_data.__espins\n# define __elision __elision_data.__eelision\n    } __elision_data;\n    __pthread_slist_t __list;\n  };\n# define __PTHREAD_MUTEX_HAVE_PREV      0\n#endif\n};\n\n#ifdef __x86_64__\n# define __PTHREAD_MUTEX_INITIALIZER(__kind) \\\n  0, 0, 0, 0, __kind, 0, 0, { 0, 0 }\n#else\n# define __PTHREAD_MUTEX_INITIALIZER(__kind) \\\n  0, 0, 0, __kind, 0, { { 0, 0 } }\n#endif\n\n#endif\n", 1810, 0) = 1810
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/struct_rwlock.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/struct_rwlock.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h", 4096) = 50
fstat(3, {st_mode=S_IFREG|0644, st_size=2027, ...}) = 0
pread64(3, "/* x86 internal rwlock struct definitions.\n   Copyright (C) 2019-2020 Free Software Foundation, Inc.\n\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <http://www.gnu.org/licenses/>.  */\n\n#ifndef _RWLOCK_INTERNAL_H\n#define _RWLOCK_INTERNAL_H\n\nstruct __pthread_rwlock_arch_t\n{\n  unsigned int __readers;\n  unsigned int __writers;\n  unsigned int __wrphase_futex;\n  unsigned int __writers_futex;\n  unsigned int __pad3;\n  unsigned int __pad4;\n#ifdef __x86_64__\n  int __cur_writer;\n  int __shared;\n  signed char __rwelision;\n# ifdef  __ILP32__\n  unsigned char __pad1[3];\n#  define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0 }\n# else\n  unsigned char __pad1[7];\n#  define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }\n# endif\n  unsigned long int __pad2;\n  /* FLAGS must stay at this position in the structure to maintain\n     binary compatibility.  */\n  unsigned int __flags;\n#else /* __x86_64__  */\n  /* FLAGS must stay at this position in the structure to maintain\n     binary compatibility.  */\n  unsigned char __flags;\n  unsigned char __shared;\n  signed char __rwelision;\n  unsigned char __pad2;\n  int __cur_writer;\n#endif\n};\n\n#ifdef __x86_64__\n# define __PTHREAD_RWLOCK_INITIALIZER(__flags) \\\n  0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, __flags\n#else\n# define __PTHREAD_RWLOCK_INITIALIZER(__flags) \\\n  0, 0, 0, 0, 0, 0, __flags, 0, 0, 0, 0\n#endif\n\n#endif\n", 2027, 0) = 2027
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x15a2000)                          = 0x15a2000
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/local/include/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/lib/llvm-12/lib/clang/12.0.0/include/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/alloca.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/alloca.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/alloca.h", 4096) = 21
fstat(3, {st_mode=S_IFREG|0644, st_size=1204, ...}) = 0
pread64(3, "/* Copyright (C) 1992-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef\t_ALLOCA_H\n#define\t_ALLOCA_H\t1\n\n#include <features.h>\n\n#define\t__need_size_t\n#include <stddef.h>\n\n__BEGIN_DECLS\n\n/* Remove any previous definitions.  */\n#undef\talloca\n\n/* Allocate a block that will be freed when the calling function exits.  */\nextern void *alloca (size_t __size) __THROW;\n\n#ifdef\t__GNUC__\n# define alloca(size)\t__builtin_alloca (size)\n#endif /* GCC.  */\n\n__END_DECLS\n\n#endif /* alloca.h */\n", 1204, 0) = 1204
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stdlib-bsearch.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/stdlib-bsearch.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", 4096) = 51
fstat(3, {st_mode=S_IFREG|0644, st_size=1378, ...}) = 0
pread64(3, "/* Perform binary search - inline version.\n   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n__extern_inline void *\nbsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,\n\t __compar_fn_t __compar)\n{\n  size_t __l, __u, __idx;\n  const void *__p;\n  int __comparison;\n\n  __l = 0;\n  __u = __nmemb;\n  while (__l < __u)\n    {\n      __idx = (__l + __u) / 2;\n      __p = (void *) (((const char *) __base) + (__idx * __size));\n      __comparison = (*__compar) (__key, __p);\n      if (__comparison < 0)\n\t__u = __idx;\n      else if (__comparison > 0)\n\t__l = __idx + 1;\n      else\n\treturn (void *) __p;\n    }\n\n  return NULL;\n}\n", 1378, 0) = 1378
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stdlib-float.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/stdlib-float.h", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", 4096) = 49
fstat(3, {st_mode=S_IFREG|0644, st_size=1115, ...}) = 0
pread64(3, "/* Floating-point inline functions for stdlib.h.\n   Copyright (C) 2012-2020 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _STDLIB_H\n# error \"Never use <bits/stdlib-float.h> directly; include <stdlib.h> instead.\"\n#endif\n\n#ifdef __USE_EXTERN_INLINES\n__extern_inline double\n__NTH (atof (const char *__nptr))\n{\n  return strtod (__nptr, (char **) NULL);\n}\n#endif /* Optimizing and Inlining.  */\n", 1115, 0) = 1115
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
openat(AT_FDCWD, "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_abs.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/usr/include/c++/9/bits/std_abs.h", 4096) = 33
fstat(3, {st_mode=S_IFREG|0644, st_size=3384, ...}) = 0
pread64(3, "// -*- C++ -*- C library enhancements header.\n\n// Copyright (C) 2016-2019 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file include/bits/std_abs.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{cmath, cstdlib}\n */\n\n#ifndef _GLIBCXX_BITS_STD_ABS_H\n#define _GLIBCXX_BITS_STD_ABS_H\n\n#pragma GCC system_header\n\n#include <bits/c++config.h>\n\n#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n#include_next <stdlib.h>\n#ifdef __CORRECT_ISO_CPP_MATH_H_PROTO\n# include_next <math.h>\n#endif\n#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n\n#undef abs\n\nextern \"C++\"\n{\nnamespace std _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n  using ::abs;\n\n#ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO\n  inline long\n  abs(long __i) { return __builtin_labs(__i); }\n#endif\n\n#ifdef _GLIBCXX_USE_LONG_LONG\n  inline long long\n  abs(long long __x) { return __builtin_llabs (__x); }\n#endif\n\n// _GLIBCXX_RESOLVE_LIB_DEFECTS\n// 2192. Validity and return type of std::abs(0u) is unclear\n// 2294. <cstdlib> should declare abs(double)\n// 2735. std::abs(short), std::abs(signed char) and others should return int\n\n#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO\n  inline _GLIBCXX_CONSTEXPR double\n  abs(double __x)\n  { return __builtin_fabs(__x); }\n\n  inline _GLIBCXX_CONSTEXPR float\n  abs(float __x)\n  { return __builtin_fabsf(__x); }\n\n  inline _GLIBCXX_CONSTEXPR long double\n  abs(long double __x)\n  { return __builtin_fabsl(__x); }\n#endif\n\n#if defined(__GLIBCXX_TYPE_INT_N_0)\n  inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0\n  abs(__GLIBCXX_TYPE_INT_N_0 __x) { return __x >= 0 ? __x : -__x; }\n#endif\n#if defined(__GLIBCXX_TYPE_INT_N_1)\n  inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1\n  abs(__GLIBCXX_TYPE_INT_N_1 __x) { return __x >= 0 ? __x : -__x; }\n#endif\n#if defined(__GLIBCXX_TYPE_INT_N_2)\n  inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2\n  abs(__GLIBCXX_TYPE_INT_N_2 __x) { return __x >= 0 ? __x : -__x; }\n#endif\n#if defined(__GLIBCXX_TYPE_INT_N_3)\n  inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3\n  abs(__GLIBCXX_TYPE_INT_N_3 __x) { return __x >= 0 ? __x : -__x; }\n#endif\n\n#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128) && !defined(__CUDACC__)\n  inline _GLIBCXX_CONSTEXPR\n  __float128\n  abs(__float128 __x)\n  { return __x < 0 ? -__x : __x; }\n#endif\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace\n} // extern \"C\"++\"\n\n#endif // _GLIBCXX_BITS_STD_ABS_H\n", 3384, 0) = 3384
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
brk(0x15c3000)                          = 0x15c3000
openat(AT_FDCWD, "./compute.h", O_RDONLY|O_CLOEXEC) = 3
readlink("/proc/self/fd/3", "/home/ignacio/fpchecker/FPChecker/tests/cpu_checking/dynamic/test_fpchecker_interceptor/compute.h", 4096) = 97
fstat(3, {st_mode=S_IFREG|0664, st_size=37, ...}) = 0
pread64(3, "\n\ndouble compute(double *x, int n);\n\n", 37, 0) = 37
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(3)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
futex(0x7f7e0783b390, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07821e8c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078379c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07836c4c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782f780, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078355f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07837dc0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x15e4000)                          = 0x15e4000
futex(0x7f7e07839af8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783b388, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783f8a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839918, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783adc0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07822f94, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839930, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782de0c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783e4b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783c478, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839e78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07848190, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782f784, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078474bc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078314e0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782ec30, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07822414, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782b8c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07837da8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078365ec, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078338e8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07831ad0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078352c0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07832db8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07831000, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07831e10, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07834d88, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07835e48, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782ff7c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07835e38, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x1605000)                          = 0x1605000
futex(0x7f7e07836a90, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07845bf0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782e500, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782e4e8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782f4f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839678, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783993c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839e7c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783aaa0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782f858, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07835458, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07847bbc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07832510, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07822324, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07841ea0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07833288, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07842940, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07842b70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07837db0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782e4f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0783f8a8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07839920, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078267b8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x1626000)                          = 0x1626000
futex(0x7f7e07831e08, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078310d0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782f55c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782e4f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07842da0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814058, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07809cb4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a258, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a034, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a03c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a260, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a328, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781363c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780ba18, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780f9a4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07813644, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780f9ac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780fa74, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780fc64, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780fc6c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814048, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078193d8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780ffd8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780ffe0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780ffec, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780fff4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07813978, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07810344, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781034c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07810370, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07810350, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07810cc0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078116d4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811874, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811878, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811c78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811b98, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cdd0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811d7c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811e4c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811e5c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb64, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811e64, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811f2c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07810368, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818424, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781835c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078131e4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078131ec, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07813638, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078135dc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07813630, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078137e4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814044, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07811c80, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814134, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078142e8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814d04, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815f8c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07814d1c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781557c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815eac, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815f84, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078161fc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816e70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078169d4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815f94, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816744, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815584, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078169dc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815eb4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816d64, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816d68, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07816d70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818284, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07817074, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818c70, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078179e4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078171c8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078184f0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078184f8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818500, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818290, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818750, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818c5c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818c60, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818f1c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781905c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078193cc, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07815f78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078193d4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb5c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781c940, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07813970, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb60, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb74, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cb78, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cdc0, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0781cdc8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07821968, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07846234, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07833f40, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07835e40, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07818b48, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0782e858, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e078360f4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07821e90, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07836dd8, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780ffe4, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e07824498, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x1647000)                          = 0x1647000
futex(0x7f7e0781c638, FUTEX_WAKE_PRIVATE, 2147483647) = 0
futex(0x7f7e0780a044, FUTEX_WAKE_PRIVATE, 2147483647) = 0
brk(0x1670000)                          = 0x1670000
mmap(NULL, 155648, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7e01a27000
brk(0x1691000)                          = 0x1691000
brk(0x16b2000)                          = 0x16b2000
brk(0x16b0000)                          = 0x16b0000
brk(0x16d1000)                          = 0x16d1000
brk(0x16f7000)                          = 0x16f7000
fstat(4, {st_mode=S_IFREG|0664, st_size=0, ...}) = 0
write(4, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\1\0>\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0@\0\0\0\1\0S\277@\0\0\0\350\0\0\0\0H\211\303\17(\5\0\0\0\0\17\21\0\17(\5\0\0\0\0\17\21@\20\17(\5\0\0\0\0\17\21@ \17(\5\0\0\0\0\17\21@0\277\0\0\0\0\350\0\0\0\0H\211\337\276\10\0\0\0\350\0\0\0\0\277\0\0\0\0\260\1\350\0\0\0\0001\300[\303\0\0\0\0\0\0\360?\0\0\0\0\0\0\0@\0\0\0\0\0\0\10@\0\0\0\0\0\0\20@\0\0\0\0\0\0\24@\0\0\0\0\0\0\30@\0\0\0\0\0\0\34@\0\0\0\0\0\0 @Result: %f\n\0Calling kernel\0\0Ubuntu clang version 12.0.0-3ubuntu1~20.04.3\0\0\0\0\0\0\0\0\24\0\0\0\0\0\0\0\1zR\0\1x\20\1\33\f\7\10\220\1\0\0\34\0\0\0\34\0\0\0\0\0\0\0`\0\0\0\0A\16\20\203\2\2^\16\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\4\0\361\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\271\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\241\0\0\0\0\0\4\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230\0\0\0\0\0\4\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\217\0\0\0\0\0\4\0000\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0\22\0\2\0\0\0\0\0\0\0\0\0`\0\0\0\0\0\0\0j\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0T\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\25\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\0\0\0\0\4\0\0\0\n\0\0\0\374\377\377\377\377\377\377\377\21\0\0\0\0\0\0\0\2\0\0\0\2\0\0\0\374\377\377\377\377\377\377\377\33\0\0\0\0\0\0\0\2\0\0\0\3\0\0\0\374\377\377\377\377\377\377\377&\0\0\0\0\0\0\0\2\0\0\0\4\0\0\0\374\377\377\377\377\377\377\3771\0\0\0\0\0\0\0\2\0\0\0\5\0\0\0\374\377\377\377\377\377\377\377:\0\0\0\0\0\0\0\n\0\0\0\7\0\0\0\f\0\0\0\0\0\0\0?\0\0\0\0\0\0\0\4\0\0\0\f\0\0\0\374\377\377\377\377\377\377\377L\0\0\0\0\0\0\0\4\0\0\0\10\0\0\0\374\377\377\377\377\377\377\377Q\0\0\0\0\0\0\0\n\0\0\0\7\0\0\0\0\0\0\0\0\0\0\0X\0\0\0\0\0\0\0\4\0\0\0\v\0\0\0\374\377\377\377\377\377\377\377 \0\0\0\0\0\0\0\2\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\0.rela.text\0.comment\0puts\0main.cpp\0main\0.note.GNU-stack\0_Z7computePdi\0.llvm_addrsig\0printf\0.rela.eh_frame\0malloc\0.strtab\0.symtab\0.rodata.cst16\0.LCPI0_3\0.LCPI0_2\0.LCPI0_1\0.rodata.str1.1\0.LCPI0_0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0q\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\250\3\0\0\0\0\0\0\302\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\1\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0`\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\2\0\0\0\0\0\0\360\0\0\0\0\0\0\0\v\0\0\0\2\0\0\0\10\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\201\0\0\0\1\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\252\0\0\0\1\0\0\0002\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\340\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\f\0\0\0\1\0\0\0000\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\373\0\0\0\0\0\0\0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0(\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\1\0\0p\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0000\1\0\0\0\0\0\08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\220\3\0\0\0\0\0\0\30\0\0\0\0\0\0\0\v\0\0\0\10\0\0\0\10\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0F\0\0\0\3L\377o\0\0\0\200\0\0\0\0\0\0\0\0\0\0\0\0\250\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0y\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0h\1\0\0\0\0\0\08\1\0\0\0\0\0\0\1\0\0\0\10\0\0\0\10\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0", 1904) = 1904
lseek(4, 40, SEEK_SET)                  = 40
write(4, "p\4\0\0\0\0\0\0", 8)          = 8
lseek(4, 1904, SEEK_SET)                = 1904
lseek(4, 60, SEEK_SET)                  = 60
write(4, "\f\0", 2)                     = 2
lseek(4, 1904, SEEK_SET)                = 1904
rt_sigprocmask(SIG_SETMASK, ~[RTMIN RT_1], [], 8) = 0
close(4)                                = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rename("main-171a64ae.o.tmp", "main.o") = 0
exit_group(0)                           = ?
+++ exited with 0 +++
